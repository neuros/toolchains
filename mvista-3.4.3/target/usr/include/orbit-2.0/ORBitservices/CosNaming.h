/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef CosNaming_H
#define CosNaming_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(_CosNaming_Istring_defined)
#define _CosNaming_Istring_defined 1
typedef CORBA_string CosNaming_Istring;
#define CosNaming_Istring_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define CosNaming_Istring_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_CosNaming_Istring_0)
#define TC_IMPL_TC_CosNaming_Istring_0 'C'
#define TC_IMPL_TC_CosNaming_Istring_1 'o'
#define TC_IMPL_TC_CosNaming_Istring_2 's'
#define TC_IMPL_TC_CosNaming_Istring_3 'N'
#define TC_IMPL_TC_CosNaming_Istring_4 'a'
#define TC_IMPL_TC_CosNaming_Istring_5 'm'
#define TC_IMPL_TC_CosNaming_Istring_6 'i'
#define TC_IMPL_TC_CosNaming_Istring_7 'n'
#define TC_IMPL_TC_CosNaming_Istring_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_Istring_struct;
#define TC_CosNaming_Istring ((CORBA_TypeCode)&TC_CosNaming_Istring_struct)
#endif
#define CosNaming_Istring__alloc() ((CosNaming_Istring *)ORBit_small_alloc (TC_CORBA_string))
#define CosNaming_Istring__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(_CosNaming_NameComponent_defined)
#define _CosNaming_NameComponent_defined 1
typedef struct CosNaming_NameComponent_type CosNaming_NameComponent;
struct CosNaming_NameComponent_type {
CosNaming_Istring id;
CosNaming_Istring kind;
};

#if !defined(TC_IMPL_TC_CosNaming_NameComponent_0)
#define TC_IMPL_TC_CosNaming_NameComponent_0 'C'
#define TC_IMPL_TC_CosNaming_NameComponent_1 'o'
#define TC_IMPL_TC_CosNaming_NameComponent_2 's'
#define TC_IMPL_TC_CosNaming_NameComponent_3 'N'
#define TC_IMPL_TC_CosNaming_NameComponent_4 'a'
#define TC_IMPL_TC_CosNaming_NameComponent_5 'm'
#define TC_IMPL_TC_CosNaming_NameComponent_6 'i'
#define TC_IMPL_TC_CosNaming_NameComponent_7 'n'
#define TC_IMPL_TC_CosNaming_NameComponent_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NameComponent_struct;
#define TC_CosNaming_NameComponent ((CORBA_TypeCode)&TC_CosNaming_NameComponent_struct)
#endif
#define CosNaming_NameComponent__alloc() ((CosNaming_NameComponent *)ORBit_small_alloc (TC_CosNaming_NameComponent))
#define CosNaming_NameComponent__freekids(m,d) ORBit_small_freekids (TC_CosNaming_NameComponent,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CosNaming_NameComponent)
#define ORBIT_DECL_CORBA_sequence_CosNaming_NameComponent 1
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_0 'C'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_2 's'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_3 'N'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_4 'a'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_5 'm'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_7 'n'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_NameComponent_8 'g'
#if !defined(_CORBA_sequence_CosNaming_NameComponent_defined)
#define _CORBA_sequence_CosNaming_NameComponent_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CosNaming_NameComponent* _buffer; CORBA_boolean _release; } CORBA_sequence_CosNaming_NameComponent;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_0)
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_0 'C'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_2 's'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_3 'N'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_4 'a'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_5 'm'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_7 'n'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_NameComponent_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CosNaming_NameComponent_struct;
#define TC_CORBA_sequence_CosNaming_NameComponent ((CORBA_TypeCode)&TC_CORBA_sequence_CosNaming_NameComponent_struct)
#endif
#define CORBA_sequence_CosNaming_NameComponent__alloc() ((CORBA_sequence_CosNaming_NameComponent *)ORBit_small_alloc (TC_CORBA_sequence_CosNaming_NameComponent))
#define CORBA_sequence_CosNaming_NameComponent__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CosNaming_NameComponent,(m),(d))
#define CORBA_sequence_CosNaming_NameComponent_allocbuf(l) ((CosNaming_NameComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_CosNaming_NameComponent, (l)))
#define CORBA_sequence_CosNaming_NameComponent_allocbuf(l) ((CosNaming_NameComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_CosNaming_NameComponent, (l)))
#endif
#if !defined(_CosNaming_Name_defined)
#define _CosNaming_Name_defined 1
typedef CORBA_sequence_CosNaming_NameComponent CosNaming_Name;
#define CosNaming_Name_marshal(x,y,z) CORBA_sequence_CosNaming_NameComponent_marshal((x),(y),(z))
#define CosNaming_Name_demarshal(x,y,z,i) CORBA_sequence_CosNaming_NameComponent_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_CosNaming_Name_0)
#define TC_IMPL_TC_CosNaming_Name_0 'C'
#define TC_IMPL_TC_CosNaming_Name_1 'o'
#define TC_IMPL_TC_CosNaming_Name_2 's'
#define TC_IMPL_TC_CosNaming_Name_3 'N'
#define TC_IMPL_TC_CosNaming_Name_4 'a'
#define TC_IMPL_TC_CosNaming_Name_5 'm'
#define TC_IMPL_TC_CosNaming_Name_6 'i'
#define TC_IMPL_TC_CosNaming_Name_7 'n'
#define TC_IMPL_TC_CosNaming_Name_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_Name_struct;
#define TC_CosNaming_Name ((CORBA_TypeCode)&TC_CosNaming_Name_struct)
#endif
#define CosNaming_Name__alloc() ((CosNaming_Name *)ORBit_small_alloc (TC_CORBA_sequence_CosNaming_NameComponent))
#define CosNaming_Name__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CosNaming_NameComponent,(m),(d))
#define CosNaming_Name_allocbuf(l) ((CosNaming_NameComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_CosNaming_NameComponent, (l)))
#endif
#if !defined(_CosNaming_BindingType_defined)
#define _CosNaming_BindingType_defined 1
typedef enum {
  CosNaming_nobject,
  CosNaming_ncontext
} CosNaming_BindingType;
#if !defined(TC_IMPL_TC_CosNaming_BindingType_0)
#define TC_IMPL_TC_CosNaming_BindingType_0 'C'
#define TC_IMPL_TC_CosNaming_BindingType_1 'o'
#define TC_IMPL_TC_CosNaming_BindingType_2 's'
#define TC_IMPL_TC_CosNaming_BindingType_3 'N'
#define TC_IMPL_TC_CosNaming_BindingType_4 'a'
#define TC_IMPL_TC_CosNaming_BindingType_5 'm'
#define TC_IMPL_TC_CosNaming_BindingType_6 'i'
#define TC_IMPL_TC_CosNaming_BindingType_7 'n'
#define TC_IMPL_TC_CosNaming_BindingType_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_BindingType_struct;
#define TC_CosNaming_BindingType ((CORBA_TypeCode)&TC_CosNaming_BindingType_struct)
#endif
#endif
#if !defined(_CosNaming_Binding_defined)
#define _CosNaming_Binding_defined 1
typedef struct CosNaming_Binding_type CosNaming_Binding;
struct CosNaming_Binding_type {
CosNaming_Name binding_name;
CosNaming_BindingType binding_type;
};

#if !defined(TC_IMPL_TC_CosNaming_Binding_0)
#define TC_IMPL_TC_CosNaming_Binding_0 'C'
#define TC_IMPL_TC_CosNaming_Binding_1 'o'
#define TC_IMPL_TC_CosNaming_Binding_2 's'
#define TC_IMPL_TC_CosNaming_Binding_3 'N'
#define TC_IMPL_TC_CosNaming_Binding_4 'a'
#define TC_IMPL_TC_CosNaming_Binding_5 'm'
#define TC_IMPL_TC_CosNaming_Binding_6 'i'
#define TC_IMPL_TC_CosNaming_Binding_7 'n'
#define TC_IMPL_TC_CosNaming_Binding_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_Binding_struct;
#define TC_CosNaming_Binding ((CORBA_TypeCode)&TC_CosNaming_Binding_struct)
#endif
#define CosNaming_Binding__alloc() ((CosNaming_Binding *)ORBit_small_alloc (TC_CosNaming_Binding))
#define CosNaming_Binding__freekids(m,d) ORBit_small_freekids (TC_CosNaming_Binding,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CosNaming_Binding)
#define ORBIT_DECL_CORBA_sequence_CosNaming_Binding 1
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_0 'C'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_2 's'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_3 'N'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_4 'a'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_5 'm'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_7 'n'
#define ORBIT_IMPL_CORBA_sequence_CosNaming_Binding_8 'g'
#if !defined(_CORBA_sequence_CosNaming_Binding_defined)
#define _CORBA_sequence_CosNaming_Binding_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CosNaming_Binding* _buffer; CORBA_boolean _release; } CORBA_sequence_CosNaming_Binding;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_0)
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_0 'C'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_2 's'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_3 'N'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_4 'a'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_5 'm'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_7 'n'
#define TC_IMPL_TC_CORBA_sequence_CosNaming_Binding_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CosNaming_Binding_struct;
#define TC_CORBA_sequence_CosNaming_Binding ((CORBA_TypeCode)&TC_CORBA_sequence_CosNaming_Binding_struct)
#endif
#define CORBA_sequence_CosNaming_Binding__alloc() ((CORBA_sequence_CosNaming_Binding *)ORBit_small_alloc (TC_CORBA_sequence_CosNaming_Binding))
#define CORBA_sequence_CosNaming_Binding__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CosNaming_Binding,(m),(d))
#define CORBA_sequence_CosNaming_Binding_allocbuf(l) ((CosNaming_Binding*)ORBit_small_allocbuf (TC_CORBA_sequence_CosNaming_Binding, (l)))
#define CORBA_sequence_CosNaming_Binding_allocbuf(l) ((CosNaming_Binding*)ORBit_small_allocbuf (TC_CORBA_sequence_CosNaming_Binding, (l)))
#endif
#if !defined(_CosNaming_BindingList_defined)
#define _CosNaming_BindingList_defined 1
typedef CORBA_sequence_CosNaming_Binding CosNaming_BindingList;
#define CosNaming_BindingList_marshal(x,y,z) CORBA_sequence_CosNaming_Binding_marshal((x),(y),(z))
#define CosNaming_BindingList_demarshal(x,y,z,i) CORBA_sequence_CosNaming_Binding_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_CosNaming_BindingList_0)
#define TC_IMPL_TC_CosNaming_BindingList_0 'C'
#define TC_IMPL_TC_CosNaming_BindingList_1 'o'
#define TC_IMPL_TC_CosNaming_BindingList_2 's'
#define TC_IMPL_TC_CosNaming_BindingList_3 'N'
#define TC_IMPL_TC_CosNaming_BindingList_4 'a'
#define TC_IMPL_TC_CosNaming_BindingList_5 'm'
#define TC_IMPL_TC_CosNaming_BindingList_6 'i'
#define TC_IMPL_TC_CosNaming_BindingList_7 'n'
#define TC_IMPL_TC_CosNaming_BindingList_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_BindingList_struct;
#define TC_CosNaming_BindingList ((CORBA_TypeCode)&TC_CosNaming_BindingList_struct)
#endif
#define CosNaming_BindingList__alloc() ((CosNaming_BindingList *)ORBit_small_alloc (TC_CORBA_sequence_CosNaming_Binding))
#define CosNaming_BindingList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CosNaming_Binding,(m),(d))
#define CosNaming_BindingList_allocbuf(l) ((CosNaming_Binding*)ORBit_small_allocbuf (TC_CORBA_sequence_CosNaming_Binding, (l)))
#endif
#if !defined(ORBIT_DECL_CosNaming_BindingIterator) && !defined(_CosNaming_BindingIterator_defined)
#define ORBIT_DECL_CosNaming_BindingIterator 1
#define _CosNaming_BindingIterator_defined 1
#define CosNaming_BindingIterator__freekids CORBA_Object__freekids
typedef CORBA_Object CosNaming_BindingIterator;
extern CORBA_unsigned_long CosNaming_BindingIterator__classid;
#if !defined(TC_IMPL_TC_CosNaming_BindingIterator_0)
#define TC_IMPL_TC_CosNaming_BindingIterator_0 'C'
#define TC_IMPL_TC_CosNaming_BindingIterator_1 'o'
#define TC_IMPL_TC_CosNaming_BindingIterator_2 's'
#define TC_IMPL_TC_CosNaming_BindingIterator_3 'N'
#define TC_IMPL_TC_CosNaming_BindingIterator_4 'a'
#define TC_IMPL_TC_CosNaming_BindingIterator_5 'm'
#define TC_IMPL_TC_CosNaming_BindingIterator_6 'i'
#define TC_IMPL_TC_CosNaming_BindingIterator_7 'n'
#define TC_IMPL_TC_CosNaming_BindingIterator_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_BindingIterator_struct;
#define TC_CosNaming_BindingIterator ((CORBA_TypeCode)&TC_CosNaming_BindingIterator_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CosNaming_NamingContext) && !defined(_CosNaming_NamingContext_defined)
#define ORBIT_DECL_CosNaming_NamingContext 1
#define _CosNaming_NamingContext_defined 1
#define CosNaming_NamingContext__freekids CORBA_Object__freekids
typedef CORBA_Object CosNaming_NamingContext;
extern CORBA_unsigned_long CosNaming_NamingContext__classid;
#if !defined(TC_IMPL_TC_CosNaming_NamingContext_0)
#define TC_IMPL_TC_CosNaming_NamingContext_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContext_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContext_2 's'
#define TC_IMPL_TC_CosNaming_NamingContext_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContext_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContext_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContext_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContext_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContext_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContext_struct;
#define TC_CosNaming_NamingContext ((CORBA_TypeCode)&TC_CosNaming_NamingContext_struct)
#endif
#endif
#if !defined(_CosNaming_NamingContext_NotFoundReason_defined)
#define _CosNaming_NamingContext_NotFoundReason_defined 1
typedef enum {
  CosNaming_NamingContext_missing_node,
  CosNaming_NamingContext_not_context,
  CosNaming_NamingContext_not_object
} CosNaming_NamingContext_NotFoundReason;
#if !defined(TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_0)
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_2 's'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFoundReason_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContext_NotFoundReason_struct;
#define TC_CosNaming_NamingContext_NotFoundReason ((CORBA_TypeCode)&TC_CosNaming_NamingContext_NotFoundReason_struct)
#endif
#endif
#undef ex_CosNaming_NamingContext_NotFound
#define ex_CosNaming_NamingContext_NotFound "IDL:omg.org/CosNaming/NamingContext/NotFound:1.0"
#if !defined(_CosNaming_NamingContext_NotFound_defined)
#define _CosNaming_NamingContext_NotFound_defined 1
typedef struct CosNaming_NamingContext_NotFound_type CosNaming_NamingContext_NotFound;
struct CosNaming_NamingContext_NotFound_type {
CosNaming_NamingContext_NotFoundReason why;
CosNaming_Name rest_of_name;
};

#if !defined(TC_IMPL_TC_CosNaming_NamingContext_NotFound_0)
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_2 's'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContext_NotFound_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContext_NotFound_struct;
#define TC_CosNaming_NamingContext_NotFound ((CORBA_TypeCode)&TC_CosNaming_NamingContext_NotFound_struct)
#endif
#define CosNaming_NamingContext_NotFound__alloc() ((CosNaming_NamingContext_NotFound *)ORBit_small_alloc (TC_CosNaming_NamingContext_NotFound))
#define CosNaming_NamingContext_NotFound__freekids(m,d) ORBit_small_freekids (TC_CosNaming_NamingContext_NotFound,(m),(d))
#endif
#undef ex_CosNaming_NamingContext_CannotProceed
#define ex_CosNaming_NamingContext_CannotProceed "IDL:omg.org/CosNaming/NamingContext/CannotProceed:1.0"
#if !defined(_CosNaming_NamingContext_CannotProceed_defined)
#define _CosNaming_NamingContext_CannotProceed_defined 1
typedef struct CosNaming_NamingContext_CannotProceed_type CosNaming_NamingContext_CannotProceed;
struct CosNaming_NamingContext_CannotProceed_type {
CosNaming_NamingContext ctx;
CosNaming_Name rest_of_name;
};

#if !defined(TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_0)
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_2 's'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContext_CannotProceed_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContext_CannotProceed_struct;
#define TC_CosNaming_NamingContext_CannotProceed ((CORBA_TypeCode)&TC_CosNaming_NamingContext_CannotProceed_struct)
#endif
#define CosNaming_NamingContext_CannotProceed__alloc() ((CosNaming_NamingContext_CannotProceed *)ORBit_small_alloc (TC_CosNaming_NamingContext_CannotProceed))
#define CosNaming_NamingContext_CannotProceed__freekids(m,d) ORBit_small_freekids (TC_CosNaming_NamingContext_CannotProceed,(m),(d))
#endif
#undef ex_CosNaming_NamingContext_InvalidName
#define ex_CosNaming_NamingContext_InvalidName "IDL:omg.org/CosNaming/NamingContext/InvalidName:1.0"
#if !defined(_CosNaming_NamingContext_InvalidName_defined)
#define _CosNaming_NamingContext_InvalidName_defined 1
typedef struct CosNaming_NamingContext_InvalidName_type CosNaming_NamingContext_InvalidName;
struct CosNaming_NamingContext_InvalidName_type {
int dummy;
};

#if !defined(TC_IMPL_TC_CosNaming_NamingContext_InvalidName_0)
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_2 's'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContext_InvalidName_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContext_InvalidName_struct;
#define TC_CosNaming_NamingContext_InvalidName ((CORBA_TypeCode)&TC_CosNaming_NamingContext_InvalidName_struct)
#endif
#define CosNaming_NamingContext_InvalidName__alloc() ((CosNaming_NamingContext_InvalidName *)ORBit_small_alloc (TC_CosNaming_NamingContext_InvalidName))
#define CosNaming_NamingContext_InvalidName__freekids(m,d) ORBit_small_freekids (TC_CosNaming_NamingContext_InvalidName,(m),(d))
#endif
#undef ex_CosNaming_NamingContext_AlreadyBound
#define ex_CosNaming_NamingContext_AlreadyBound "IDL:omg.org/CosNaming/NamingContext/AlreadyBound:1.0"
#if !defined(_CosNaming_NamingContext_AlreadyBound_defined)
#define _CosNaming_NamingContext_AlreadyBound_defined 1
typedef struct CosNaming_NamingContext_AlreadyBound_type CosNaming_NamingContext_AlreadyBound;
struct CosNaming_NamingContext_AlreadyBound_type {
int dummy;
};

#if !defined(TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_0)
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_2 's'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContext_AlreadyBound_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContext_AlreadyBound_struct;
#define TC_CosNaming_NamingContext_AlreadyBound ((CORBA_TypeCode)&TC_CosNaming_NamingContext_AlreadyBound_struct)
#endif
#define CosNaming_NamingContext_AlreadyBound__alloc() ((CosNaming_NamingContext_AlreadyBound *)ORBit_small_alloc (TC_CosNaming_NamingContext_AlreadyBound))
#define CosNaming_NamingContext_AlreadyBound__freekids(m,d) ORBit_small_freekids (TC_CosNaming_NamingContext_AlreadyBound,(m),(d))
#endif
#undef ex_CosNaming_NamingContext_NotEmpty
#define ex_CosNaming_NamingContext_NotEmpty "IDL:omg.org/CosNaming/NamingContext/NotEmpty:1.0"
#if !defined(_CosNaming_NamingContext_NotEmpty_defined)
#define _CosNaming_NamingContext_NotEmpty_defined 1
typedef struct CosNaming_NamingContext_NotEmpty_type CosNaming_NamingContext_NotEmpty;
struct CosNaming_NamingContext_NotEmpty_type {
int dummy;
};

#if !defined(TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_0)
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_2 's'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContext_NotEmpty_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContext_NotEmpty_struct;
#define TC_CosNaming_NamingContext_NotEmpty ((CORBA_TypeCode)&TC_CosNaming_NamingContext_NotEmpty_struct)
#endif
#define CosNaming_NamingContext_NotEmpty__alloc() ((CosNaming_NamingContext_NotEmpty *)ORBit_small_alloc (TC_CosNaming_NamingContext_NotEmpty))
#define CosNaming_NamingContext_NotEmpty__freekids(m,d) ORBit_small_freekids (TC_CosNaming_NamingContext_NotEmpty,(m),(d))
#endif
#if !defined(ORBIT_DECL_CosNaming_BindingIterator) && !defined(_CosNaming_BindingIterator_defined)
#define ORBIT_DECL_CosNaming_BindingIterator 1
#define _CosNaming_BindingIterator_defined 1
#define CosNaming_BindingIterator__freekids CORBA_Object__freekids
typedef CORBA_Object CosNaming_BindingIterator;
extern CORBA_unsigned_long CosNaming_BindingIterator__classid;
#if !defined(TC_IMPL_TC_CosNaming_BindingIterator_0)
#define TC_IMPL_TC_CosNaming_BindingIterator_0 'C'
#define TC_IMPL_TC_CosNaming_BindingIterator_1 'o'
#define TC_IMPL_TC_CosNaming_BindingIterator_2 's'
#define TC_IMPL_TC_CosNaming_BindingIterator_3 'N'
#define TC_IMPL_TC_CosNaming_BindingIterator_4 'a'
#define TC_IMPL_TC_CosNaming_BindingIterator_5 'm'
#define TC_IMPL_TC_CosNaming_BindingIterator_6 'i'
#define TC_IMPL_TC_CosNaming_BindingIterator_7 'n'
#define TC_IMPL_TC_CosNaming_BindingIterator_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_BindingIterator_struct;
#define TC_CosNaming_BindingIterator ((CORBA_TypeCode)&TC_CosNaming_BindingIterator_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CosNaming_NamingContextExt) && !defined(_CosNaming_NamingContextExt_defined)
#define ORBIT_DECL_CosNaming_NamingContextExt 1
#define _CosNaming_NamingContextExt_defined 1
#define CosNaming_NamingContextExt__freekids CORBA_Object__freekids
typedef CORBA_Object CosNaming_NamingContextExt;
extern CORBA_unsigned_long CosNaming_NamingContextExt__classid;
#if !defined(TC_IMPL_TC_CosNaming_NamingContextExt_0)
#define TC_IMPL_TC_CosNaming_NamingContextExt_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContextExt_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContextExt_2 's'
#define TC_IMPL_TC_CosNaming_NamingContextExt_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContextExt_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContextExt_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContextExt_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContextExt_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContextExt_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContextExt_struct;
#define TC_CosNaming_NamingContextExt ((CORBA_TypeCode)&TC_CosNaming_NamingContextExt_struct)
#endif
#endif
#if !defined(_CosNaming_NamingContextExt_StringName_defined)
#define _CosNaming_NamingContextExt_StringName_defined 1
typedef CORBA_string CosNaming_NamingContextExt_StringName;
#define CosNaming_NamingContextExt_StringName_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define CosNaming_NamingContextExt_StringName_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_CosNaming_NamingContextExt_StringName_0)
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_2 's'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContextExt_StringName_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContextExt_StringName_struct;
#define TC_CosNaming_NamingContextExt_StringName ((CORBA_TypeCode)&TC_CosNaming_NamingContextExt_StringName_struct)
#endif
#define CosNaming_NamingContextExt_StringName__alloc() ((CosNaming_NamingContextExt_StringName *)ORBit_small_alloc (TC_CORBA_string))
#define CosNaming_NamingContextExt_StringName__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(_CosNaming_NamingContextExt_Address_defined)
#define _CosNaming_NamingContextExt_Address_defined 1
typedef CORBA_string CosNaming_NamingContextExt_Address;
#define CosNaming_NamingContextExt_Address_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define CosNaming_NamingContextExt_Address_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_CosNaming_NamingContextExt_Address_0)
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_2 's'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContextExt_Address_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContextExt_Address_struct;
#define TC_CosNaming_NamingContextExt_Address ((CORBA_TypeCode)&TC_CosNaming_NamingContextExt_Address_struct)
#endif
#define CosNaming_NamingContextExt_Address__alloc() ((CosNaming_NamingContextExt_Address *)ORBit_small_alloc (TC_CORBA_string))
#define CosNaming_NamingContextExt_Address__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(_CosNaming_NamingContextExt_URLString_defined)
#define _CosNaming_NamingContextExt_URLString_defined 1
typedef CORBA_string CosNaming_NamingContextExt_URLString;
#define CosNaming_NamingContextExt_URLString_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define CosNaming_NamingContextExt_URLString_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_CosNaming_NamingContextExt_URLString_0)
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_2 's'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContextExt_URLString_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContextExt_URLString_struct;
#define TC_CosNaming_NamingContextExt_URLString ((CORBA_TypeCode)&TC_CosNaming_NamingContextExt_URLString_struct)
#endif
#define CosNaming_NamingContextExt_URLString__alloc() ((CosNaming_NamingContextExt_URLString *)ORBit_small_alloc (TC_CORBA_string))
#define CosNaming_NamingContextExt_URLString__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#undef ex_CosNaming_NamingContextExt_InvalidAddress
#define ex_CosNaming_NamingContextExt_InvalidAddress "IDL:omg.org/CosNaming/NamingContextExt/InvalidAddress:1.0"
#if !defined(_CosNaming_NamingContextExt_InvalidAddress_defined)
#define _CosNaming_NamingContextExt_InvalidAddress_defined 1
typedef struct CosNaming_NamingContextExt_InvalidAddress_type CosNaming_NamingContextExt_InvalidAddress;
struct CosNaming_NamingContextExt_InvalidAddress_type {
int dummy;
};

#if !defined(TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_0)
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_0 'C'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_1 'o'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_2 's'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_3 'N'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_4 'a'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_5 'm'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_6 'i'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_7 'n'
#define TC_IMPL_TC_CosNaming_NamingContextExt_InvalidAddress_8 'g'
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CosNaming_NamingContextExt_InvalidAddress_struct;
#define TC_CosNaming_NamingContextExt_InvalidAddress ((CORBA_TypeCode)&TC_CosNaming_NamingContextExt_InvalidAddress_struct)
#endif
#define CosNaming_NamingContextExt_InvalidAddress__alloc() ((CosNaming_NamingContextExt_InvalidAddress *)ORBit_small_alloc (TC_CosNaming_NamingContextExt_InvalidAddress))
#define CosNaming_NamingContextExt_InvalidAddress__freekids(m,d) ORBit_small_freekids (TC_CosNaming_NamingContextExt_InvalidAddress,(m),(d))
#endif

/** POA structures **/
#ifndef _defined_POA_CosNaming_NamingContext
#define _defined_POA_CosNaming_NamingContext 1
typedef struct {
  void *_private;
void (*bind)(PortableServer_Servant _servant, const CosNaming_Name* n, const CORBA_Object obj, CORBA_Environment *ev);
void (*rebind)(PortableServer_Servant _servant, const CosNaming_Name* n, const CORBA_Object obj, CORBA_Environment *ev);
void (*bind_context)(PortableServer_Servant _servant, const CosNaming_Name* n, const CosNaming_NamingContext nc, CORBA_Environment *ev);
void (*rebind_context)(PortableServer_Servant _servant, const CosNaming_Name* n, const CosNaming_NamingContext nc, CORBA_Environment *ev);
CORBA_Object (*resolve)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev);
void (*unbind)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev);
CosNaming_NamingContext (*new_context)(PortableServer_Servant _servant, CORBA_Environment *ev);
CosNaming_NamingContext (*bind_new_context)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev);
void (*destroy)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*list)(PortableServer_Servant _servant, const CORBA_unsigned_long how_many, CosNaming_BindingList** bl, CosNaming_BindingIterator* bi, CORBA_Environment *ev);
} POA_CosNaming_NamingContext__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CosNaming_NamingContext__epv *CosNaming_NamingContext_epv;
} POA_CosNaming_NamingContext__vepv;
typedef struct {
  void *_private;
  POA_CosNaming_NamingContext__vepv *vepv;
} POA_CosNaming_NamingContext;
extern void POA_CosNaming_NamingContext__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CosNaming_NamingContext__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_CosNaming_NamingContext */
#ifndef _defined_POA_CosNaming_BindingIterator
#define _defined_POA_CosNaming_BindingIterator 1
typedef struct {
  void *_private;
CORBA_boolean (*next_one)(PortableServer_Servant _servant, CosNaming_Binding** b, CORBA_Environment *ev);
CORBA_boolean (*next_n)(PortableServer_Servant _servant, const CORBA_unsigned_long how_many, CosNaming_BindingList** bl, CORBA_Environment *ev);
void (*destroy)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_CosNaming_BindingIterator__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CosNaming_BindingIterator__epv *CosNaming_BindingIterator_epv;
} POA_CosNaming_BindingIterator__vepv;
typedef struct {
  void *_private;
  POA_CosNaming_BindingIterator__vepv *vepv;
} POA_CosNaming_BindingIterator;
extern void POA_CosNaming_BindingIterator__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CosNaming_BindingIterator__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_CosNaming_BindingIterator */
#ifndef _defined_POA_CosNaming_NamingContextExt
#define _defined_POA_CosNaming_NamingContextExt 1
typedef struct {
  void *_private;
CosNaming_NamingContextExt_StringName (*to_string)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev);
CosNaming_Name* (*to_name)(PortableServer_Servant _servant, const CORBA_char * sn, CORBA_Environment *ev);
CosNaming_NamingContextExt_URLString (*to_url)(PortableServer_Servant _servant, const CORBA_char * addr, const CORBA_char * sn, CORBA_Environment *ev);
CORBA_Object (*resolve_str)(PortableServer_Servant _servant, const CORBA_char * n, CORBA_Environment *ev);
} POA_CosNaming_NamingContextExt__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_CosNaming_NamingContext__epv *CosNaming_NamingContext_epv;
  POA_CosNaming_NamingContextExt__epv *CosNaming_NamingContextExt_epv;
} POA_CosNaming_NamingContextExt__vepv;
typedef struct {
  void *_private;
  POA_CosNaming_NamingContextExt__vepv *vepv;
} POA_CosNaming_NamingContextExt;
extern void POA_CosNaming_NamingContextExt__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_CosNaming_NamingContextExt__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_CosNaming_NamingContextExt */

/** skel prototypes **/
void _ORBIT_skel_small_CosNaming_NamingContext_bind(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_bind)(PortableServer_Servant _servant, const CosNaming_Name* n, const CORBA_Object obj, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_rebind(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_rebind)(PortableServer_Servant _servant, const CosNaming_Name* n, const CORBA_Object obj, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_bind_context(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_bind_context)(PortableServer_Servant _servant, const CosNaming_Name* n, const CosNaming_NamingContext nc, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_rebind_context(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_rebind_context)(PortableServer_Servant _servant, const CosNaming_Name* n, const CosNaming_NamingContext nc, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_resolve(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_Object (*_impl_resolve)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_unbind(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unbind)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_new_context(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CosNaming_NamingContext (*_impl_new_context)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_bind_new_context(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CosNaming_NamingContext (*_impl_bind_new_context)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_destroy(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_destroy)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContext_list(POA_CosNaming_NamingContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_list)(PortableServer_Servant _servant, const CORBA_unsigned_long how_many, CosNaming_BindingList** bl, CosNaming_BindingIterator* bi, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_BindingIterator_next_one(POA_CosNaming_BindingIterator *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_next_one)(PortableServer_Servant _servant, CosNaming_Binding** b, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_BindingIterator_next_n(POA_CosNaming_BindingIterator *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_next_n)(PortableServer_Servant _servant, const CORBA_unsigned_long how_many, CosNaming_BindingList** bl, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_BindingIterator_destroy(POA_CosNaming_BindingIterator *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_destroy)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContextExt_to_string(POA_CosNaming_NamingContextExt *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CosNaming_NamingContextExt_StringName (*_impl_to_string)(PortableServer_Servant _servant, const CosNaming_Name* n, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContextExt_to_name(POA_CosNaming_NamingContextExt *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CosNaming_Name* (*_impl_to_name)(PortableServer_Servant _servant, const CORBA_char * sn, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContextExt_to_url(POA_CosNaming_NamingContextExt *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CosNaming_NamingContextExt_URLString (*_impl_to_url)(PortableServer_Servant _servant, const CORBA_char * addr, const CORBA_char * sn, CORBA_Environment *ev));
void _ORBIT_skel_small_CosNaming_NamingContextExt_resolve_str(POA_CosNaming_NamingContextExt *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_Object (*_impl_resolve_str)(PortableServer_Servant _servant, const CORBA_char * n, CORBA_Environment *ev));

/** stub prototypes **/
void CosNaming_NamingContext_bind(CosNaming_NamingContext _obj, const CosNaming_Name* n, const CORBA_Object obj, CORBA_Environment *ev);
void CosNaming_NamingContext_rebind(CosNaming_NamingContext _obj, const CosNaming_Name* n, const CORBA_Object obj, CORBA_Environment *ev);
void CosNaming_NamingContext_bind_context(CosNaming_NamingContext _obj, const CosNaming_Name* n, const CosNaming_NamingContext nc, CORBA_Environment *ev);
void CosNaming_NamingContext_rebind_context(CosNaming_NamingContext _obj, const CosNaming_Name* n, const CosNaming_NamingContext nc, CORBA_Environment *ev);
CORBA_Object CosNaming_NamingContext_resolve(CosNaming_NamingContext _obj, const CosNaming_Name* n, CORBA_Environment *ev);
void CosNaming_NamingContext_unbind(CosNaming_NamingContext _obj, const CosNaming_Name* n, CORBA_Environment *ev);
CosNaming_NamingContext CosNaming_NamingContext_new_context(CosNaming_NamingContext _obj, CORBA_Environment *ev);
CosNaming_NamingContext CosNaming_NamingContext_bind_new_context(CosNaming_NamingContext _obj, const CosNaming_Name* n, CORBA_Environment *ev);
void CosNaming_NamingContext_destroy(CosNaming_NamingContext _obj, CORBA_Environment *ev);
void CosNaming_NamingContext_list(CosNaming_NamingContext _obj, const CORBA_unsigned_long how_many, CosNaming_BindingList** bl, CosNaming_BindingIterator* bi, CORBA_Environment *ev);
CORBA_boolean CosNaming_BindingIterator_next_one(CosNaming_BindingIterator _obj, CosNaming_Binding** b, CORBA_Environment *ev);
CORBA_boolean CosNaming_BindingIterator_next_n(CosNaming_BindingIterator _obj, const CORBA_unsigned_long how_many, CosNaming_BindingList** bl, CORBA_Environment *ev);
void CosNaming_BindingIterator_destroy(CosNaming_BindingIterator _obj, CORBA_Environment *ev);
#define CosNaming_NamingContextExt_bind CosNaming_NamingContext_bind
#define CosNaming_NamingContextExt_rebind CosNaming_NamingContext_rebind
#define CosNaming_NamingContextExt_bind_context CosNaming_NamingContext_bind_context
#define CosNaming_NamingContextExt_rebind_context CosNaming_NamingContext_rebind_context
#define CosNaming_NamingContextExt_resolve CosNaming_NamingContext_resolve
#define CosNaming_NamingContextExt_unbind CosNaming_NamingContext_unbind
#define CosNaming_NamingContextExt_new_context CosNaming_NamingContext_new_context
#define CosNaming_NamingContextExt_bind_new_context CosNaming_NamingContext_bind_new_context
#define CosNaming_NamingContextExt_destroy CosNaming_NamingContext_destroy
#define CosNaming_NamingContextExt_list CosNaming_NamingContext_list
CosNaming_NamingContextExt_StringName CosNaming_NamingContextExt_to_string(CosNaming_NamingContextExt _obj, const CosNaming_Name* n, CORBA_Environment *ev);
CosNaming_Name* CosNaming_NamingContextExt_to_name(CosNaming_NamingContextExt _obj, const CORBA_char * sn, CORBA_Environment *ev);
CosNaming_NamingContextExt_URLString CosNaming_NamingContextExt_to_url(CosNaming_NamingContextExt _obj, const CORBA_char * addr, const CORBA_char * sn, CORBA_Environment *ev);
CORBA_Object CosNaming_NamingContextExt_resolve_str(CosNaming_NamingContextExt _obj, const CORBA_char * n, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static 
#else
extern 
#endif
ORBit_IInterface CosNaming_NamingContext__iinterface;
#define CosNaming_NamingContext_IMETHODS_LEN 10
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static 
#else
extern 
#endif
ORBit_IMethod CosNaming_NamingContext__imethods[CosNaming_NamingContext_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static 
#else
extern 
#endif
ORBit_IInterface CosNaming_BindingIterator__iinterface;
#define CosNaming_BindingIterator_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static 
#else
extern 
#endif
ORBit_IMethod CosNaming_BindingIterator__imethods[CosNaming_BindingIterator_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static 
#else
extern 
#endif
ORBit_IInterface CosNaming_NamingContextExt__iinterface;
#define CosNaming_NamingContextExt_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_CosNaming
static 
#else
extern 
#endif
ORBit_IMethod CosNaming_NamingContextExt__imethods[CosNaming_NamingContextExt_IMETHODS_LEN];
#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
