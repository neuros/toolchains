/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef poa_defs_H
#define poa_defs_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(ORBIT_DECL_PortableServer_POA) && !defined(_PortableServer_POA_defined)
#define ORBIT_DECL_PortableServer_POA 1
#define _PortableServer_POA_defined 1
typedef struct PortableServer_POA_type *PortableServer_POA;
#ifndef TC_PortableServer_POA
#  define TC_PortableServer_POA TC_CORBA_Object
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_Object)
#define ORBIT_DECL_CORBA_sequence_CORBA_Object 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_0 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_2 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_7 's'
#if !defined(_CORBA_sequence_CORBA_Object_defined)
#define _CORBA_sequence_CORBA_Object_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_Object* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_Object;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_Object_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_0 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_2 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_Object_struct;
#define TC_CORBA_sequence_CORBA_Object ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_Object_struct)
#endif
#define CORBA_sequence_CORBA_Object__alloc() ((CORBA_sequence_CORBA_Object *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_Object))
#define CORBA_sequence_CORBA_Object__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_Object,(m),(d))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_PortableServer_POA)
#define ORBIT_DECL_CORBA_sequence_PortableServer_POA 1
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_0 'p'
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_1 'o'
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_2 'a'
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_3 '_'
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_4 'd'
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_5 'e'
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_6 'f'
#define ORBIT_IMPL_CORBA_sequence_PortableServer_POA_7 's'
#if !defined(_CORBA_sequence_PortableServer_POA_defined)
#define _CORBA_sequence_PortableServer_POA_defined 1
typedef CORBA_sequence_CORBA_Object CORBA_sequence_PortableServer_POA;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_PortableServer_POA_0)
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_0 'p'
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_1 'o'
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_2 'a'
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_3 '_'
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_4 'd'
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_5 'e'
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_6 'f'
#define TC_IMPL_TC_CORBA_sequence_PortableServer_POA_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_PortableServer_POA_struct;
#define TC_CORBA_sequence_PortableServer_POA ((CORBA_TypeCode)&TC_CORBA_sequence_PortableServer_POA_struct)
#endif
#define CORBA_sequence_PortableServer_POA__alloc CORBA_sequence_CORBA_Object__alloc
#define CORBA_sequence_PortableServer_POA__freekids CORBA_sequence_CORBA_Object__freekids
#define CORBA_sequence_PortableServer_POA_allocbuf CORBA_sequence_CORBA_Object_allocbuf
#define CORBA_sequence_PortableServer_POA_marshal(x,y,z) CORBA_sequence_CORBA_Object_marshal((x),(y),(z))
#define CORBA_sequence_PortableServer_POA_demarshal(x,y,z,i) CORBA_sequence_CORBA_Object_demarshal((x),(y),(z),(i))
#endif
#if !defined(_PortableServer_POAList_defined)
#define _PortableServer_POAList_defined 1
typedef CORBA_sequence_PortableServer_POA PortableServer_POAList;
#define PortableServer_POAList_marshal(x,y,z) CORBA_sequence_PortableServer_POA_marshal((x),(y),(z))
#define PortableServer_POAList_demarshal(x,y,z,i) CORBA_sequence_PortableServer_POA_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_PortableServer_POAList_0)
#define TC_IMPL_TC_PortableServer_POAList_0 'p'
#define TC_IMPL_TC_PortableServer_POAList_1 'o'
#define TC_IMPL_TC_PortableServer_POAList_2 'a'
#define TC_IMPL_TC_PortableServer_POAList_3 '_'
#define TC_IMPL_TC_PortableServer_POAList_4 'd'
#define TC_IMPL_TC_PortableServer_POAList_5 'e'
#define TC_IMPL_TC_PortableServer_POAList_6 'f'
#define TC_IMPL_TC_PortableServer_POAList_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POAList_struct;
#define TC_PortableServer_POAList ((CORBA_TypeCode)&TC_PortableServer_POAList_struct)
#endif
#define PortableServer_POAList__alloc() ((PortableServer_POAList *)ORBit_small_alloc (TC_CORBA_sequence_PortableServer_POA))
#define PortableServer_POAList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_PortableServer_POA,(m),(d))
#define PortableServer_POAList_allocbuf(l) ((PortableServer_POA*)ORBit_small_allocbuf (TC_CORBA_sequence_PortableServer_POA, (l)))
#endif
#if !defined(_PortableServer_Servant_defined)
#define _PortableServer_Servant_defined 1
typedef struct PortableServer_Servant_type *PortableServer_Servant;
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#if !defined(_PortableServer_ObjectId_defined)
#define _PortableServer_ObjectId_defined 1
typedef CORBA_sequence_CORBA_octet PortableServer_ObjectId;
#define PortableServer_ObjectId_marshal(x,y,z) CORBA_sequence_CORBA_octet_marshal((x),(y),(z))
#define PortableServer_ObjectId_demarshal(x,y,z,i) CORBA_sequence_CORBA_octet_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_PortableServer_ObjectId_0)
#define TC_IMPL_TC_PortableServer_ObjectId_0 'p'
#define TC_IMPL_TC_PortableServer_ObjectId_1 'o'
#define TC_IMPL_TC_PortableServer_ObjectId_2 'a'
#define TC_IMPL_TC_PortableServer_ObjectId_3 '_'
#define TC_IMPL_TC_PortableServer_ObjectId_4 'd'
#define TC_IMPL_TC_PortableServer_ObjectId_5 'e'
#define TC_IMPL_TC_PortableServer_ObjectId_6 'f'
#define TC_IMPL_TC_PortableServer_ObjectId_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_ObjectId_struct;
#define TC_PortableServer_ObjectId ((CORBA_TypeCode)&TC_PortableServer_ObjectId_struct)
#endif
#define PortableServer_ObjectId__alloc() ((PortableServer_ObjectId *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define PortableServer_ObjectId__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define PortableServer_ObjectId_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#undef ex_PortableServer_ForwardRequest
#define ex_PortableServer_ForwardRequest "IDL:omg.org/PortableServer/ForwardRequest:1.0"
#if !defined(_PortableServer_ForwardRequest_defined)
#define _PortableServer_ForwardRequest_defined 1
typedef struct PortableServer_ForwardRequest_type PortableServer_ForwardRequest;
struct PortableServer_ForwardRequest_type {
CORBA_Object forward_reference;
};

#if !defined(TC_IMPL_TC_PortableServer_ForwardRequest_0)
#define TC_IMPL_TC_PortableServer_ForwardRequest_0 'p'
#define TC_IMPL_TC_PortableServer_ForwardRequest_1 'o'
#define TC_IMPL_TC_PortableServer_ForwardRequest_2 'a'
#define TC_IMPL_TC_PortableServer_ForwardRequest_3 '_'
#define TC_IMPL_TC_PortableServer_ForwardRequest_4 'd'
#define TC_IMPL_TC_PortableServer_ForwardRequest_5 'e'
#define TC_IMPL_TC_PortableServer_ForwardRequest_6 'f'
#define TC_IMPL_TC_PortableServer_ForwardRequest_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_ForwardRequest_struct;
#define TC_PortableServer_ForwardRequest ((CORBA_TypeCode)&TC_PortableServer_ForwardRequest_struct)
#endif
#define PortableServer_ForwardRequest__alloc() ((PortableServer_ForwardRequest *)ORBit_small_alloc (TC_PortableServer_ForwardRequest))
#define PortableServer_ForwardRequest__freekids(m,d) ORBit_small_freekids (TC_PortableServer_ForwardRequest,(m),(d))
#endif
#ifndef PortableServer_THREAD_POLICY_ID
#define PortableServer_THREAD_POLICY_ID 16U
#endif /* !PortableServer_THREAD_POLICY_ID */

#ifndef PortableServer_LIFESPAN_POLICY_ID
#define PortableServer_LIFESPAN_POLICY_ID 17U
#endif /* !PortableServer_LIFESPAN_POLICY_ID */

#ifndef PortableServer_ID_UNIQUENESS_POLICY_ID
#define PortableServer_ID_UNIQUENESS_POLICY_ID 18U
#endif /* !PortableServer_ID_UNIQUENESS_POLICY_ID */

#ifndef PortableServer_ID_ASSIGNMENT_POLICY_ID
#define PortableServer_ID_ASSIGNMENT_POLICY_ID 19U
#endif /* !PortableServer_ID_ASSIGNMENT_POLICY_ID */

#ifndef PortableServer_IMPLICIT_ACTIVATION_POLICY_ID
#define PortableServer_IMPLICIT_ACTIVATION_POLICY_ID 20U
#endif /* !PortableServer_IMPLICIT_ACTIVATION_POLICY_ID */

#ifndef PortableServer_SERVANT_RETENTION_POLICY_ID
#define PortableServer_SERVANT_RETENTION_POLICY_ID 21U
#endif /* !PortableServer_SERVANT_RETENTION_POLICY_ID */

#ifndef PortableServer_REQUEST_PROCESSING_POLICY_ID
#define PortableServer_REQUEST_PROCESSING_POLICY_ID 22U
#endif /* !PortableServer_REQUEST_PROCESSING_POLICY_ID */

#if !defined(_PortableServer_ThreadPolicyValue_defined)
#define _PortableServer_ThreadPolicyValue_defined 1
typedef enum {
  PortableServer_ORB_CTRL_MODEL,
  PortableServer_SINGLE_THREAD_MODEL
} PortableServer_ThreadPolicyValue;
#if !defined(TC_IMPL_TC_PortableServer_ThreadPolicyValue_0)
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_0 'p'
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_1 'o'
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_2 'a'
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_3 '_'
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_4 'd'
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_5 'e'
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_6 'f'
#define TC_IMPL_TC_PortableServer_ThreadPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_ThreadPolicyValue_struct;
#define TC_PortableServer_ThreadPolicyValue ((CORBA_TypeCode)&TC_PortableServer_ThreadPolicyValue_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_ThreadPolicy) && !defined(_PortableServer_ThreadPolicy_defined)
#define ORBIT_DECL_PortableServer_ThreadPolicy 1
#define _PortableServer_ThreadPolicy_defined 1
typedef struct PortableServer_ThreadPolicy_type *PortableServer_ThreadPolicy;
#ifndef TC_PortableServer_ThreadPolicy
#  define TC_PortableServer_ThreadPolicy TC_CORBA_Object
#endif
#endif
#if !defined(_PortableServer_LifespanPolicyValue_defined)
#define _PortableServer_LifespanPolicyValue_defined 1
typedef enum {
  PortableServer_TRANSIENT,
  PortableServer_PERSISTENT
} PortableServer_LifespanPolicyValue;
#if !defined(TC_IMPL_TC_PortableServer_LifespanPolicyValue_0)
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_0 'p'
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_1 'o'
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_2 'a'
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_3 '_'
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_4 'd'
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_5 'e'
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_6 'f'
#define TC_IMPL_TC_PortableServer_LifespanPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_LifespanPolicyValue_struct;
#define TC_PortableServer_LifespanPolicyValue ((CORBA_TypeCode)&TC_PortableServer_LifespanPolicyValue_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_LifespanPolicy) && !defined(_PortableServer_LifespanPolicy_defined)
#define ORBIT_DECL_PortableServer_LifespanPolicy 1
#define _PortableServer_LifespanPolicy_defined 1
typedef struct PortableServer_LifespanPolicy_type *PortableServer_LifespanPolicy;
#ifndef TC_PortableServer_LifespanPolicy
#  define TC_PortableServer_LifespanPolicy TC_CORBA_Object
#endif
#endif
#if !defined(_PortableServer_IdUniquenessPolicyValue_defined)
#define _PortableServer_IdUniquenessPolicyValue_defined 1
typedef enum {
  PortableServer_UNIQUE_ID,
  PortableServer_MULTIPLE_ID
} PortableServer_IdUniquenessPolicyValue;
#if !defined(TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_0)
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_0 'p'
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_1 'o'
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_2 'a'
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_3 '_'
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_4 'd'
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_5 'e'
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_6 'f'
#define TC_IMPL_TC_PortableServer_IdUniquenessPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_IdUniquenessPolicyValue_struct;
#define TC_PortableServer_IdUniquenessPolicyValue ((CORBA_TypeCode)&TC_PortableServer_IdUniquenessPolicyValue_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_IdUniquenessPolicy) && !defined(_PortableServer_IdUniquenessPolicy_defined)
#define ORBIT_DECL_PortableServer_IdUniquenessPolicy 1
#define _PortableServer_IdUniquenessPolicy_defined 1
typedef struct PortableServer_IdUniquenessPolicy_type *PortableServer_IdUniquenessPolicy;
#ifndef TC_PortableServer_IdUniquenessPolicy
#  define TC_PortableServer_IdUniquenessPolicy TC_CORBA_Object
#endif
#endif
#if !defined(_PortableServer_IdAssignmentPolicyValue_defined)
#define _PortableServer_IdAssignmentPolicyValue_defined 1
typedef enum {
  PortableServer_USER_ID,
  PortableServer_SYSTEM_ID
} PortableServer_IdAssignmentPolicyValue;
#if !defined(TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_0)
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_0 'p'
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_1 'o'
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_2 'a'
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_3 '_'
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_4 'd'
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_5 'e'
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_6 'f'
#define TC_IMPL_TC_PortableServer_IdAssignmentPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_IdAssignmentPolicyValue_struct;
#define TC_PortableServer_IdAssignmentPolicyValue ((CORBA_TypeCode)&TC_PortableServer_IdAssignmentPolicyValue_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_IdAssignmentPolicy) && !defined(_PortableServer_IdAssignmentPolicy_defined)
#define ORBIT_DECL_PortableServer_IdAssignmentPolicy 1
#define _PortableServer_IdAssignmentPolicy_defined 1
typedef struct PortableServer_IdAssignmentPolicy_type *PortableServer_IdAssignmentPolicy;
#ifndef TC_PortableServer_IdAssignmentPolicy
#  define TC_PortableServer_IdAssignmentPolicy TC_CORBA_Object
#endif
#endif
#if !defined(_PortableServer_ImplicitActivationPolicyValue_defined)
#define _PortableServer_ImplicitActivationPolicyValue_defined 1
typedef enum {
  PortableServer_IMPLICIT_ACTIVATION,
  PortableServer_NO_IMPLICIT_ACTIVATION
} PortableServer_ImplicitActivationPolicyValue;
#if !defined(TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_0)
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_0 'p'
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_1 'o'
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_2 'a'
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_3 '_'
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_4 'd'
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_5 'e'
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_6 'f'
#define TC_IMPL_TC_PortableServer_ImplicitActivationPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_ImplicitActivationPolicyValue_struct;
#define TC_PortableServer_ImplicitActivationPolicyValue ((CORBA_TypeCode)&TC_PortableServer_ImplicitActivationPolicyValue_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_ImplicitActivationPolicy) && !defined(_PortableServer_ImplicitActivationPolicy_defined)
#define ORBIT_DECL_PortableServer_ImplicitActivationPolicy 1
#define _PortableServer_ImplicitActivationPolicy_defined 1
typedef struct PortableServer_ImplicitActivationPolicy_type *PortableServer_ImplicitActivationPolicy;
#ifndef TC_PortableServer_ImplicitActivationPolicy
#  define TC_PortableServer_ImplicitActivationPolicy TC_CORBA_Object
#endif
#endif
#if !defined(_PortableServer_ServantRetentionPolicyValue_defined)
#define _PortableServer_ServantRetentionPolicyValue_defined 1
typedef enum {
  PortableServer_RETAIN,
  PortableServer_NON_RETAIN
} PortableServer_ServantRetentionPolicyValue;
#if !defined(TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_0)
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_0 'p'
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_1 'o'
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_2 'a'
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_3 '_'
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_4 'd'
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_5 'e'
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_6 'f'
#define TC_IMPL_TC_PortableServer_ServantRetentionPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_ServantRetentionPolicyValue_struct;
#define TC_PortableServer_ServantRetentionPolicyValue ((CORBA_TypeCode)&TC_PortableServer_ServantRetentionPolicyValue_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_ServantRetentionPolicy) && !defined(_PortableServer_ServantRetentionPolicy_defined)
#define ORBIT_DECL_PortableServer_ServantRetentionPolicy 1
#define _PortableServer_ServantRetentionPolicy_defined 1
typedef struct PortableServer_ServantRetentionPolicy_type *PortableServer_ServantRetentionPolicy;
#ifndef TC_PortableServer_ServantRetentionPolicy
#  define TC_PortableServer_ServantRetentionPolicy TC_CORBA_Object
#endif
#endif
#if !defined(_PortableServer_RequestProcessingPolicyValue_defined)
#define _PortableServer_RequestProcessingPolicyValue_defined 1
typedef enum {
  PortableServer_USE_ACTIVE_OBJECT_MAP_ONLY,
  PortableServer_USE_DEFAULT_SERVANT,
  PortableServer_USE_SERVANT_MANAGER
} PortableServer_RequestProcessingPolicyValue;
#if !defined(TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_0)
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_0 'p'
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_1 'o'
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_2 'a'
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_3 '_'
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_4 'd'
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_5 'e'
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_6 'f'
#define TC_IMPL_TC_PortableServer_RequestProcessingPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_RequestProcessingPolicyValue_struct;
#define TC_PortableServer_RequestProcessingPolicyValue ((CORBA_TypeCode)&TC_PortableServer_RequestProcessingPolicyValue_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_RequestProcessingPolicy) && !defined(_PortableServer_RequestProcessingPolicy_defined)
#define ORBIT_DECL_PortableServer_RequestProcessingPolicy 1
#define _PortableServer_RequestProcessingPolicy_defined 1
typedef struct PortableServer_RequestProcessingPolicy_type *PortableServer_RequestProcessingPolicy;
#ifndef TC_PortableServer_RequestProcessingPolicy
#  define TC_PortableServer_RequestProcessingPolicy TC_CORBA_Object
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_POAManager) && !defined(_PortableServer_POAManager_defined)
#define ORBIT_DECL_PortableServer_POAManager 1
#define _PortableServer_POAManager_defined 1
typedef struct PortableServer_POAManager_type *PortableServer_POAManager;
#ifndef TC_PortableServer_POAManager
#  define TC_PortableServer_POAManager TC_CORBA_Object
#endif
#endif
#undef ex_PortableServer_POAManager_AdapterInactive
#define ex_PortableServer_POAManager_AdapterInactive "IDL:omg.org/PortableServer/POAManager/AdapterInactive:1.0"
#if !defined(_PortableServer_POAManager_AdapterInactive_defined)
#define _PortableServer_POAManager_AdapterInactive_defined 1
typedef struct PortableServer_POAManager_AdapterInactive_type PortableServer_POAManager_AdapterInactive;
struct PortableServer_POAManager_AdapterInactive_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_0)
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_0 'p'
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_1 'o'
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_2 'a'
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_3 '_'
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_4 'd'
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_5 'e'
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_6 'f'
#define TC_IMPL_TC_PortableServer_POAManager_AdapterInactive_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POAManager_AdapterInactive_struct;
#define TC_PortableServer_POAManager_AdapterInactive ((CORBA_TypeCode)&TC_PortableServer_POAManager_AdapterInactive_struct)
#endif
#define PortableServer_POAManager_AdapterInactive__alloc() ((PortableServer_POAManager_AdapterInactive *)ORBit_small_alloc (TC_PortableServer_POAManager_AdapterInactive))
#define PortableServer_POAManager_AdapterInactive__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POAManager_AdapterInactive,(m),(d))
#endif
#if !defined(_PortableServer_POAManager_State_defined)
#define _PortableServer_POAManager_State_defined 1
typedef enum {
  PortableServer_POAManager_HOLDING,
  PortableServer_POAManager_ACTIVE,
  PortableServer_POAManager_DISCARDING,
  PortableServer_POAManager_INACTIVE
} PortableServer_POAManager_State;
#if !defined(TC_IMPL_TC_PortableServer_POAManager_State_0)
#define TC_IMPL_TC_PortableServer_POAManager_State_0 'p'
#define TC_IMPL_TC_PortableServer_POAManager_State_1 'o'
#define TC_IMPL_TC_PortableServer_POAManager_State_2 'a'
#define TC_IMPL_TC_PortableServer_POAManager_State_3 '_'
#define TC_IMPL_TC_PortableServer_POAManager_State_4 'd'
#define TC_IMPL_TC_PortableServer_POAManager_State_5 'e'
#define TC_IMPL_TC_PortableServer_POAManager_State_6 'f'
#define TC_IMPL_TC_PortableServer_POAManager_State_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POAManager_State_struct;
#define TC_PortableServer_POAManager_State ((CORBA_TypeCode)&TC_PortableServer_POAManager_State_struct)
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_AdapterActivator) && !defined(_PortableServer_AdapterActivator_defined)
#define ORBIT_DECL_PortableServer_AdapterActivator 1
#define _PortableServer_AdapterActivator_defined 1
typedef struct PortableServer_AdapterActivator_type *PortableServer_AdapterActivator;
#ifndef TC_PortableServer_AdapterActivator
#  define TC_PortableServer_AdapterActivator TC_CORBA_Object
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_ServantManager) && !defined(_PortableServer_ServantManager_defined)
#define ORBIT_DECL_PortableServer_ServantManager 1
#define _PortableServer_ServantManager_defined 1
typedef struct PortableServer_ServantManager_type *PortableServer_ServantManager;
#ifndef TC_PortableServer_ServantManager
#  define TC_PortableServer_ServantManager TC_CORBA_Object
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_ServantActivator) && !defined(_PortableServer_ServantActivator_defined)
#define ORBIT_DECL_PortableServer_ServantActivator 1
#define _PortableServer_ServantActivator_defined 1
typedef struct PortableServer_ServantActivator_type *PortableServer_ServantActivator;
#ifndef TC_PortableServer_ServantActivator
#  define TC_PortableServer_ServantActivator TC_CORBA_Object
#endif
#endif
#if !defined(ORBIT_DECL_PortableServer_ServantLocator) && !defined(_PortableServer_ServantLocator_defined)
#define ORBIT_DECL_PortableServer_ServantLocator 1
#define _PortableServer_ServantLocator_defined 1
typedef struct PortableServer_ServantLocator_type *PortableServer_ServantLocator;
#ifndef TC_PortableServer_ServantLocator
#  define TC_PortableServer_ServantLocator TC_CORBA_Object
#endif
#endif
#if !defined(_PortableServer_ServantLocator_Cookie_defined)
#define _PortableServer_ServantLocator_Cookie_defined 1
typedef struct PortableServer_ServantLocator_Cookie_type *PortableServer_ServantLocator_Cookie;
#endif
#if !defined(ORBIT_DECL_PortableServer_POA) && !defined(_PortableServer_POA_defined)
#define ORBIT_DECL_PortableServer_POA 1
#define _PortableServer_POA_defined 1
typedef struct PortableServer_POA_type *PortableServer_POA;
#ifndef TC_PortableServer_POA
#  define TC_PortableServer_POA TC_CORBA_Object
#endif
#endif
#undef ex_PortableServer_POA_AdapterAlreadyExists
#define ex_PortableServer_POA_AdapterAlreadyExists "IDL:omg.org/PortableServer/POA/AdapterAlreadyExists:1.0"
#if !defined(_PortableServer_POA_AdapterAlreadyExists_defined)
#define _PortableServer_POA_AdapterAlreadyExists_defined 1
typedef struct PortableServer_POA_AdapterAlreadyExists_type PortableServer_POA_AdapterAlreadyExists;
struct PortableServer_POA_AdapterAlreadyExists_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_0)
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_0 'p'
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_1 'o'
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_2 'a'
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_3 '_'
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_4 'd'
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_5 'e'
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_6 'f'
#define TC_IMPL_TC_PortableServer_POA_AdapterAlreadyExists_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_AdapterAlreadyExists_struct;
#define TC_PortableServer_POA_AdapterAlreadyExists ((CORBA_TypeCode)&TC_PortableServer_POA_AdapterAlreadyExists_struct)
#endif
#define PortableServer_POA_AdapterAlreadyExists__alloc() ((PortableServer_POA_AdapterAlreadyExists *)ORBit_small_alloc (TC_PortableServer_POA_AdapterAlreadyExists))
#define PortableServer_POA_AdapterAlreadyExists__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_AdapterAlreadyExists,(m),(d))
#endif
#undef ex_PortableServer_POA_AdapterNonExistent
#define ex_PortableServer_POA_AdapterNonExistent "IDL:omg.org/PortableServer/POA/AdapterNonExistent:1.0"
#if !defined(_PortableServer_POA_AdapterNonExistent_defined)
#define _PortableServer_POA_AdapterNonExistent_defined 1
typedef struct PortableServer_POA_AdapterNonExistent_type PortableServer_POA_AdapterNonExistent;
struct PortableServer_POA_AdapterNonExistent_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_0)
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_0 'p'
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_1 'o'
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_2 'a'
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_3 '_'
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_4 'd'
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_5 'e'
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_6 'f'
#define TC_IMPL_TC_PortableServer_POA_AdapterNonExistent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_AdapterNonExistent_struct;
#define TC_PortableServer_POA_AdapterNonExistent ((CORBA_TypeCode)&TC_PortableServer_POA_AdapterNonExistent_struct)
#endif
#define PortableServer_POA_AdapterNonExistent__alloc() ((PortableServer_POA_AdapterNonExistent *)ORBit_small_alloc (TC_PortableServer_POA_AdapterNonExistent))
#define PortableServer_POA_AdapterNonExistent__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_AdapterNonExistent,(m),(d))
#endif
#undef ex_PortableServer_POA_InvalidPolicy
#define ex_PortableServer_POA_InvalidPolicy "IDL:omg.org/PortableServer/POA/InvalidPolicy:1.0"
#if !defined(_PortableServer_POA_InvalidPolicy_defined)
#define _PortableServer_POA_InvalidPolicy_defined 1
typedef struct PortableServer_POA_InvalidPolicy_type PortableServer_POA_InvalidPolicy;
struct PortableServer_POA_InvalidPolicy_type {
CORBA_unsigned_short index;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_InvalidPolicy_0)
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_0 'p'
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_1 'o'
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_2 'a'
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_3 '_'
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_4 'd'
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_5 'e'
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_6 'f'
#define TC_IMPL_TC_PortableServer_POA_InvalidPolicy_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_InvalidPolicy_struct;
#define TC_PortableServer_POA_InvalidPolicy ((CORBA_TypeCode)&TC_PortableServer_POA_InvalidPolicy_struct)
#endif
#define PortableServer_POA_InvalidPolicy__alloc() ((PortableServer_POA_InvalidPolicy *)ORBit_small_alloc (TC_PortableServer_POA_InvalidPolicy))
#define PortableServer_POA_InvalidPolicy__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_InvalidPolicy,(m),(d))
#endif
#undef ex_PortableServer_POA_NoServant
#define ex_PortableServer_POA_NoServant "IDL:omg.org/PortableServer/POA/NoServant:1.0"
#if !defined(_PortableServer_POA_NoServant_defined)
#define _PortableServer_POA_NoServant_defined 1
typedef struct PortableServer_POA_NoServant_type PortableServer_POA_NoServant;
struct PortableServer_POA_NoServant_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_NoServant_0)
#define TC_IMPL_TC_PortableServer_POA_NoServant_0 'p'
#define TC_IMPL_TC_PortableServer_POA_NoServant_1 'o'
#define TC_IMPL_TC_PortableServer_POA_NoServant_2 'a'
#define TC_IMPL_TC_PortableServer_POA_NoServant_3 '_'
#define TC_IMPL_TC_PortableServer_POA_NoServant_4 'd'
#define TC_IMPL_TC_PortableServer_POA_NoServant_5 'e'
#define TC_IMPL_TC_PortableServer_POA_NoServant_6 'f'
#define TC_IMPL_TC_PortableServer_POA_NoServant_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_NoServant_struct;
#define TC_PortableServer_POA_NoServant ((CORBA_TypeCode)&TC_PortableServer_POA_NoServant_struct)
#endif
#define PortableServer_POA_NoServant__alloc() ((PortableServer_POA_NoServant *)ORBit_small_alloc (TC_PortableServer_POA_NoServant))
#define PortableServer_POA_NoServant__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_NoServant,(m),(d))
#endif
#undef ex_PortableServer_POA_ObjectAlreadyActive
#define ex_PortableServer_POA_ObjectAlreadyActive "IDL:omg.org/PortableServer/POA/ObjectAlreadyActive:1.0"
#if !defined(_PortableServer_POA_ObjectAlreadyActive_defined)
#define _PortableServer_POA_ObjectAlreadyActive_defined 1
typedef struct PortableServer_POA_ObjectAlreadyActive_type PortableServer_POA_ObjectAlreadyActive;
struct PortableServer_POA_ObjectAlreadyActive_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_0)
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_0 'p'
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_1 'o'
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_2 'a'
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_3 '_'
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_4 'd'
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_5 'e'
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_6 'f'
#define TC_IMPL_TC_PortableServer_POA_ObjectAlreadyActive_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_ObjectAlreadyActive_struct;
#define TC_PortableServer_POA_ObjectAlreadyActive ((CORBA_TypeCode)&TC_PortableServer_POA_ObjectAlreadyActive_struct)
#endif
#define PortableServer_POA_ObjectAlreadyActive__alloc() ((PortableServer_POA_ObjectAlreadyActive *)ORBit_small_alloc (TC_PortableServer_POA_ObjectAlreadyActive))
#define PortableServer_POA_ObjectAlreadyActive__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_ObjectAlreadyActive,(m),(d))
#endif
#undef ex_PortableServer_POA_ObjectNotActive
#define ex_PortableServer_POA_ObjectNotActive "IDL:omg.org/PortableServer/POA/ObjectNotActive:1.0"
#if !defined(_PortableServer_POA_ObjectNotActive_defined)
#define _PortableServer_POA_ObjectNotActive_defined 1
typedef struct PortableServer_POA_ObjectNotActive_type PortableServer_POA_ObjectNotActive;
struct PortableServer_POA_ObjectNotActive_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_ObjectNotActive_0)
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_0 'p'
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_1 'o'
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_2 'a'
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_3 '_'
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_4 'd'
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_5 'e'
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_6 'f'
#define TC_IMPL_TC_PortableServer_POA_ObjectNotActive_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_ObjectNotActive_struct;
#define TC_PortableServer_POA_ObjectNotActive ((CORBA_TypeCode)&TC_PortableServer_POA_ObjectNotActive_struct)
#endif
#define PortableServer_POA_ObjectNotActive__alloc() ((PortableServer_POA_ObjectNotActive *)ORBit_small_alloc (TC_PortableServer_POA_ObjectNotActive))
#define PortableServer_POA_ObjectNotActive__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_ObjectNotActive,(m),(d))
#endif
#undef ex_PortableServer_POA_ServantAlreadyActive
#define ex_PortableServer_POA_ServantAlreadyActive "IDL:omg.org/PortableServer/POA/ServantAlreadyActive:1.0"
#if !defined(_PortableServer_POA_ServantAlreadyActive_defined)
#define _PortableServer_POA_ServantAlreadyActive_defined 1
typedef struct PortableServer_POA_ServantAlreadyActive_type PortableServer_POA_ServantAlreadyActive;
struct PortableServer_POA_ServantAlreadyActive_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_0)
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_0 'p'
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_1 'o'
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_2 'a'
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_3 '_'
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_4 'd'
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_5 'e'
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_6 'f'
#define TC_IMPL_TC_PortableServer_POA_ServantAlreadyActive_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_ServantAlreadyActive_struct;
#define TC_PortableServer_POA_ServantAlreadyActive ((CORBA_TypeCode)&TC_PortableServer_POA_ServantAlreadyActive_struct)
#endif
#define PortableServer_POA_ServantAlreadyActive__alloc() ((PortableServer_POA_ServantAlreadyActive *)ORBit_small_alloc (TC_PortableServer_POA_ServantAlreadyActive))
#define PortableServer_POA_ServantAlreadyActive__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_ServantAlreadyActive,(m),(d))
#endif
#undef ex_PortableServer_POA_ServantNotActive
#define ex_PortableServer_POA_ServantNotActive "IDL:omg.org/PortableServer/POA/ServantNotActive:1.0"
#if !defined(_PortableServer_POA_ServantNotActive_defined)
#define _PortableServer_POA_ServantNotActive_defined 1
typedef struct PortableServer_POA_ServantNotActive_type PortableServer_POA_ServantNotActive;
struct PortableServer_POA_ServantNotActive_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_ServantNotActive_0)
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_0 'p'
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_1 'o'
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_2 'a'
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_3 '_'
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_4 'd'
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_5 'e'
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_6 'f'
#define TC_IMPL_TC_PortableServer_POA_ServantNotActive_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_ServantNotActive_struct;
#define TC_PortableServer_POA_ServantNotActive ((CORBA_TypeCode)&TC_PortableServer_POA_ServantNotActive_struct)
#endif
#define PortableServer_POA_ServantNotActive__alloc() ((PortableServer_POA_ServantNotActive *)ORBit_small_alloc (TC_PortableServer_POA_ServantNotActive))
#define PortableServer_POA_ServantNotActive__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_ServantNotActive,(m),(d))
#endif
#undef ex_PortableServer_POA_WrongAdapter
#define ex_PortableServer_POA_WrongAdapter "IDL:omg.org/PortableServer/POA/WrongAdapter:1.0"
#if !defined(_PortableServer_POA_WrongAdapter_defined)
#define _PortableServer_POA_WrongAdapter_defined 1
typedef struct PortableServer_POA_WrongAdapter_type PortableServer_POA_WrongAdapter;
struct PortableServer_POA_WrongAdapter_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_WrongAdapter_0)
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_0 'p'
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_1 'o'
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_2 'a'
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_3 '_'
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_4 'd'
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_5 'e'
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_6 'f'
#define TC_IMPL_TC_PortableServer_POA_WrongAdapter_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_WrongAdapter_struct;
#define TC_PortableServer_POA_WrongAdapter ((CORBA_TypeCode)&TC_PortableServer_POA_WrongAdapter_struct)
#endif
#define PortableServer_POA_WrongAdapter__alloc() ((PortableServer_POA_WrongAdapter *)ORBit_small_alloc (TC_PortableServer_POA_WrongAdapter))
#define PortableServer_POA_WrongAdapter__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_WrongAdapter,(m),(d))
#endif
#undef ex_PortableServer_POA_WrongPolicy
#define ex_PortableServer_POA_WrongPolicy "IDL:omg.org/PortableServer/POA/WrongPolicy:1.0"
#if !defined(_PortableServer_POA_WrongPolicy_defined)
#define _PortableServer_POA_WrongPolicy_defined 1
typedef struct PortableServer_POA_WrongPolicy_type PortableServer_POA_WrongPolicy;
struct PortableServer_POA_WrongPolicy_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_POA_WrongPolicy_0)
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_0 'p'
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_1 'o'
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_2 'a'
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_3 '_'
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_4 'd'
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_5 'e'
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_6 'f'
#define TC_IMPL_TC_PortableServer_POA_WrongPolicy_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_POA_WrongPolicy_struct;
#define TC_PortableServer_POA_WrongPolicy ((CORBA_TypeCode)&TC_PortableServer_POA_WrongPolicy_struct)
#endif
#define PortableServer_POA_WrongPolicy__alloc() ((PortableServer_POA_WrongPolicy *)ORBit_small_alloc (TC_PortableServer_POA_WrongPolicy))
#define PortableServer_POA_WrongPolicy__freekids(m,d) ORBit_small_freekids (TC_PortableServer_POA_WrongPolicy,(m),(d))
#endif
#if !defined(ORBIT_DECL_PortableServer_Current) && !defined(_PortableServer_Current_defined)
#define ORBIT_DECL_PortableServer_Current 1
#define _PortableServer_Current_defined 1
typedef struct PortableServer_Current_type *PortableServer_Current;
#ifndef TC_PortableServer_Current
#  define TC_PortableServer_Current TC_CORBA_Object
#endif
#endif
#undef ex_PortableServer_Current_NoContext
#define ex_PortableServer_Current_NoContext "IDL:omg.org/PortableServer/Current/NoContext:1.0"
#if !defined(_PortableServer_Current_NoContext_defined)
#define _PortableServer_Current_NoContext_defined 1
typedef struct PortableServer_Current_NoContext_type PortableServer_Current_NoContext;
struct PortableServer_Current_NoContext_type {
int dummy;
};

#if !defined(TC_IMPL_TC_PortableServer_Current_NoContext_0)
#define TC_IMPL_TC_PortableServer_Current_NoContext_0 'p'
#define TC_IMPL_TC_PortableServer_Current_NoContext_1 'o'
#define TC_IMPL_TC_PortableServer_Current_NoContext_2 'a'
#define TC_IMPL_TC_PortableServer_Current_NoContext_3 '_'
#define TC_IMPL_TC_PortableServer_Current_NoContext_4 'd'
#define TC_IMPL_TC_PortableServer_Current_NoContext_5 'e'
#define TC_IMPL_TC_PortableServer_Current_NoContext_6 'f'
#define TC_IMPL_TC_PortableServer_Current_NoContext_7 's'
#ifdef ORBIT_IDL_C_IMODULE_poa_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_PortableServer_Current_NoContext_struct;
#define TC_PortableServer_Current_NoContext ((CORBA_TypeCode)&TC_PortableServer_Current_NoContext_struct)
#endif
#define PortableServer_Current_NoContext__alloc() ((PortableServer_Current_NoContext *)ORBit_small_alloc (TC_PortableServer_Current_NoContext))
#define PortableServer_Current_NoContext__freekids(m,d) ORBit_small_freekids (TC_PortableServer_Current_NoContext,(m),(d))
#endif

/** stub prototypes **/
#define PortableServer_ThreadPolicy__get_policy_type CORBA_Policy__get_policy_type
#define PortableServer_ThreadPolicy_copy CORBA_Policy_copy
#define PortableServer_ThreadPolicy_destroy CORBA_Policy_destroy
PortableServer_ThreadPolicyValue PortableServer_ThreadPolicy__get_value(PortableServer_ThreadPolicy _obj, CORBA_Environment *ev);
#define PortableServer_LifespanPolicy__get_policy_type CORBA_Policy__get_policy_type
#define PortableServer_LifespanPolicy_copy CORBA_Policy_copy
#define PortableServer_LifespanPolicy_destroy CORBA_Policy_destroy
PortableServer_LifespanPolicyValue PortableServer_LifespanPolicy__get_value(PortableServer_LifespanPolicy _obj, CORBA_Environment *ev);
#define PortableServer_IdUniquenessPolicy__get_policy_type CORBA_Policy__get_policy_type
#define PortableServer_IdUniquenessPolicy_copy CORBA_Policy_copy
#define PortableServer_IdUniquenessPolicy_destroy CORBA_Policy_destroy
PortableServer_IdUniquenessPolicyValue PortableServer_IdUniquenessPolicy__get_value(PortableServer_IdUniquenessPolicy _obj, CORBA_Environment *ev);
#define PortableServer_IdAssignmentPolicy__get_policy_type CORBA_Policy__get_policy_type
#define PortableServer_IdAssignmentPolicy_copy CORBA_Policy_copy
#define PortableServer_IdAssignmentPolicy_destroy CORBA_Policy_destroy
PortableServer_IdAssignmentPolicyValue PortableServer_IdAssignmentPolicy__get_value(PortableServer_IdAssignmentPolicy _obj, CORBA_Environment *ev);
#define PortableServer_ImplicitActivationPolicy__get_policy_type CORBA_Policy__get_policy_type
#define PortableServer_ImplicitActivationPolicy_copy CORBA_Policy_copy
#define PortableServer_ImplicitActivationPolicy_destroy CORBA_Policy_destroy
PortableServer_ImplicitActivationPolicyValue PortableServer_ImplicitActivationPolicy__get_value(PortableServer_ImplicitActivationPolicy _obj, CORBA_Environment *ev);
#define PortableServer_ServantRetentionPolicy__get_policy_type CORBA_Policy__get_policy_type
#define PortableServer_ServantRetentionPolicy_copy CORBA_Policy_copy
#define PortableServer_ServantRetentionPolicy_destroy CORBA_Policy_destroy
PortableServer_ServantRetentionPolicyValue PortableServer_ServantRetentionPolicy__get_value(PortableServer_ServantRetentionPolicy _obj, CORBA_Environment *ev);
#define PortableServer_RequestProcessingPolicy__get_policy_type CORBA_Policy__get_policy_type
#define PortableServer_RequestProcessingPolicy_copy CORBA_Policy_copy
#define PortableServer_RequestProcessingPolicy_destroy CORBA_Policy_destroy
PortableServer_RequestProcessingPolicyValue PortableServer_RequestProcessingPolicy__get_value(PortableServer_RequestProcessingPolicy _obj, CORBA_Environment *ev);
void PortableServer_POAManager_activate(PortableServer_POAManager _obj, CORBA_Environment *ev);
void PortableServer_POAManager_hold_requests(PortableServer_POAManager _obj, const CORBA_boolean wait_for_completion, CORBA_Environment *ev);
void PortableServer_POAManager_discard_requests(PortableServer_POAManager _obj, const CORBA_boolean wait_for_completion, CORBA_Environment *ev);
void PortableServer_POAManager_deactivate(PortableServer_POAManager _obj, const CORBA_boolean etherealize_objects, const CORBA_boolean wait_for_completion, CORBA_Environment *ev);
PortableServer_POAManager_State PortableServer_POAManager_get_state(PortableServer_POAManager _obj, CORBA_Environment *ev);
CORBA_boolean PortableServer_AdapterActivator_unknown_adapter(PortableServer_AdapterActivator _obj, const PortableServer_POA parent, const CORBA_char * name, CORBA_Environment *ev);
PortableServer_Servant PortableServer_ServantActivator_incarnate(PortableServer_ServantActivator _obj, const PortableServer_ObjectId* oid, const PortableServer_POA adapter, CORBA_Environment *ev);
void PortableServer_ServantActivator_etherealize(PortableServer_ServantActivator _obj, const PortableServer_ObjectId* oid, const PortableServer_POA adapter, const PortableServer_Servant serv, const CORBA_boolean cleanup_in_progress, const CORBA_boolean remaining_activations, CORBA_Environment *ev);
PortableServer_Servant PortableServer_ServantLocator_preinvoke(PortableServer_ServantLocator _obj, const PortableServer_ObjectId* oid, const PortableServer_POA adapter, const CORBA_char * operation, PortableServer_ServantLocator_Cookie the_cookie, CORBA_Environment *ev);
void PortableServer_ServantLocator_postinvoke(PortableServer_ServantLocator _obj, const PortableServer_ObjectId* oid, const PortableServer_POA adapter, const CORBA_char * operation, const PortableServer_ServantLocator_Cookie the_cookie, const PortableServer_Servant the_servant, CORBA_Environment *ev);
PortableServer_POA PortableServer_POA_create_POA(PortableServer_POA _obj, const CORBA_char * adapter_name, const PortableServer_POAManager a_POAManager, const CORBA_PolicyList* policies, CORBA_Environment *ev);
PortableServer_POA PortableServer_POA_find_POA(PortableServer_POA _obj, const CORBA_char * adapter_name, const CORBA_boolean activate_it, CORBA_Environment *ev);
void PortableServer_POA_destroy(PortableServer_POA _obj, const CORBA_boolean etherealize_objects, const CORBA_boolean wait_for_completion, CORBA_Environment *ev);
PortableServer_ThreadPolicy PortableServer_POA_create_thread_policy(PortableServer_POA _obj, const PortableServer_ThreadPolicyValue value, CORBA_Environment *ev);
PortableServer_LifespanPolicy PortableServer_POA_create_lifespan_policy(PortableServer_POA _obj, const PortableServer_LifespanPolicyValue value, CORBA_Environment *ev);
PortableServer_IdUniquenessPolicy PortableServer_POA_create_id_uniqueness_policy(PortableServer_POA _obj, const PortableServer_IdUniquenessPolicyValue value, CORBA_Environment *ev);
PortableServer_IdAssignmentPolicy PortableServer_POA_create_id_assignment_policy(PortableServer_POA _obj, const PortableServer_IdAssignmentPolicyValue value, CORBA_Environment *ev);
PortableServer_ImplicitActivationPolicy PortableServer_POA_create_implicit_activation_policy(PortableServer_POA _obj, const PortableServer_ImplicitActivationPolicyValue value, CORBA_Environment *ev);
PortableServer_ServantRetentionPolicy PortableServer_POA_create_servant_retention_policy(PortableServer_POA _obj, const PortableServer_ServantRetentionPolicyValue value, CORBA_Environment *ev);
PortableServer_RequestProcessingPolicy PortableServer_POA_create_request_processing_policy(PortableServer_POA _obj, const PortableServer_RequestProcessingPolicyValue value, CORBA_Environment *ev);
CORBA_string PortableServer_POA__get_the_name(PortableServer_POA _obj, CORBA_Environment *ev);
PortableServer_POA PortableServer_POA__get_the_parent(PortableServer_POA _obj, CORBA_Environment *ev);
PortableServer_POAList* PortableServer_POA__get_the_children(PortableServer_POA _obj, CORBA_Environment *ev);
PortableServer_POAManager PortableServer_POA__get_the_POAManager(PortableServer_POA _obj, CORBA_Environment *ev);
PortableServer_AdapterActivator PortableServer_POA__get_the_activator(PortableServer_POA _obj, CORBA_Environment *ev);
void PortableServer_POA__set_the_activator(PortableServer_POA _obj, const PortableServer_AdapterActivator value, CORBA_Environment *ev);
PortableServer_ServantManager PortableServer_POA_get_servant_manager(PortableServer_POA _obj, CORBA_Environment *ev);
void PortableServer_POA_set_servant_manager(PortableServer_POA _obj, const PortableServer_ServantManager imgr, CORBA_Environment *ev);
PortableServer_Servant PortableServer_POA_get_servant(PortableServer_POA _obj, CORBA_Environment *ev);
void PortableServer_POA_set_servant(PortableServer_POA _obj, const PortableServer_Servant p_servant, CORBA_Environment *ev);
PortableServer_ObjectId* PortableServer_POA_activate_object(PortableServer_POA _obj, const PortableServer_Servant p_servant, CORBA_Environment *ev);
void PortableServer_POA_activate_object_with_id(PortableServer_POA _obj, const PortableServer_ObjectId* id, const PortableServer_Servant p_servant, CORBA_Environment *ev);
void PortableServer_POA_deactivate_object(PortableServer_POA _obj, const PortableServer_ObjectId* oid, CORBA_Environment *ev);
CORBA_Object PortableServer_POA_create_reference(PortableServer_POA _obj, const CORBA_char * intf, CORBA_Environment *ev);
CORBA_Object PortableServer_POA_create_reference_with_id(PortableServer_POA _obj, const PortableServer_ObjectId* oid, const CORBA_char * intf, CORBA_Environment *ev);
PortableServer_ObjectId* PortableServer_POA_servant_to_id(PortableServer_POA _obj, const PortableServer_Servant p_servant, CORBA_Environment *ev);
CORBA_Object PortableServer_POA_servant_to_reference(PortableServer_POA _obj, const PortableServer_Servant p_servant, CORBA_Environment *ev);
PortableServer_Servant PortableServer_POA_reference_to_servant(PortableServer_POA _obj, const CORBA_Object reference, CORBA_Environment *ev);
PortableServer_ObjectId* PortableServer_POA_reference_to_id(PortableServer_POA _obj, const CORBA_Object reference, CORBA_Environment *ev);
PortableServer_Servant PortableServer_POA_id_to_servant(PortableServer_POA _obj, const PortableServer_ObjectId* oid, CORBA_Environment *ev);
CORBA_Object PortableServer_POA_id_to_reference(PortableServer_POA _obj, const PortableServer_ObjectId* oid, CORBA_Environment *ev);
PortableServer_POA PortableServer_Current_get_POA(PortableServer_Current _obj, CORBA_Environment *ev);
PortableServer_ObjectId* PortableServer_Current_get_object_id(PortableServer_Current _obj, CORBA_Environment *ev);
#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
