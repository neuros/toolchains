/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef orbit_interface_H
#define orbit_interface_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(_ORBit_IArgFlag_defined)
#define _ORBit_IArgFlag_defined 1
typedef CORBA_long ORBit_IArgFlag;
#define ORBit_IArgFlag_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define ORBit_IArgFlag_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_ORBit_IArgFlag_0)
#define TC_IMPL_TC_ORBit_IArgFlag_0 'o'
#define TC_IMPL_TC_ORBit_IArgFlag_1 'r'
#define TC_IMPL_TC_ORBit_IArgFlag_2 'b'
#define TC_IMPL_TC_ORBit_IArgFlag_3 'i'
#define TC_IMPL_TC_ORBit_IArgFlag_4 't'
#define TC_IMPL_TC_ORBit_IArgFlag_5 '_'
#define TC_IMPL_TC_ORBit_IArgFlag_6 'i'
#define TC_IMPL_TC_ORBit_IArgFlag_7 'n'
#define TC_IMPL_TC_ORBit_IArgFlag_8 't'
#define TC_IMPL_TC_ORBit_IArgFlag_9 'e'
#define TC_IMPL_TC_ORBit_IArgFlag_10 'r'
#define TC_IMPL_TC_ORBit_IArgFlag_11 'f'
#define TC_IMPL_TC_ORBit_IArgFlag_12 'a'
#define TC_IMPL_TC_ORBit_IArgFlag_13 'c'
#define TC_IMPL_TC_ORBit_IArgFlag_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IArgFlag_struct;
#define TC_ORBit_IArgFlag ((CORBA_TypeCode)&TC_ORBit_IArgFlag_struct)
#endif
#define ORBit_IArgFlag__alloc() ((ORBit_IArgFlag *)ORBit_small_alloc (TC_CORBA_long))
#define ORBit_IArgFlag__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#ifndef ORBit_I_COMMON_FIXED_SIZE
#define ORBit_I_COMMON_FIXED_SIZE 1
#endif /* !ORBit_I_COMMON_FIXED_SIZE */

#ifndef ORBit_I_ARG_IN
#define ORBit_I_ARG_IN 32
#endif /* !ORBit_I_ARG_IN */

#ifndef ORBit_I_ARG_OUT
#define ORBit_I_ARG_OUT 64
#endif /* !ORBit_I_ARG_OUT */

#ifndef ORBit_I_ARG_INOUT
#define ORBit_I_ARG_INOUT 128
#endif /* !ORBit_I_ARG_INOUT */

#if !defined(_ORBit_IArg_defined)
#define _ORBit_IArg_defined 1
typedef struct ORBit_IArg_type ORBit_IArg;
struct ORBit_IArg_type {
CORBA_TypeCode tc;
ORBit_IArgFlag flags;
CORBA_string name;
};

#if !defined(TC_IMPL_TC_ORBit_IArg_0)
#define TC_IMPL_TC_ORBit_IArg_0 'o'
#define TC_IMPL_TC_ORBit_IArg_1 'r'
#define TC_IMPL_TC_ORBit_IArg_2 'b'
#define TC_IMPL_TC_ORBit_IArg_3 'i'
#define TC_IMPL_TC_ORBit_IArg_4 't'
#define TC_IMPL_TC_ORBit_IArg_5 '_'
#define TC_IMPL_TC_ORBit_IArg_6 'i'
#define TC_IMPL_TC_ORBit_IArg_7 'n'
#define TC_IMPL_TC_ORBit_IArg_8 't'
#define TC_IMPL_TC_ORBit_IArg_9 'e'
#define TC_IMPL_TC_ORBit_IArg_10 'r'
#define TC_IMPL_TC_ORBit_IArg_11 'f'
#define TC_IMPL_TC_ORBit_IArg_12 'a'
#define TC_IMPL_TC_ORBit_IArg_13 'c'
#define TC_IMPL_TC_ORBit_IArg_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IArg_struct;
#define TC_ORBit_IArg ((CORBA_TypeCode)&TC_ORBit_IArg_struct)
#endif
#define ORBit_IArg__alloc() ((ORBit_IArg *)ORBit_small_alloc (TC_ORBit_IArg))
#define ORBit_IArg__freekids(m,d) ORBit_small_freekids (TC_ORBit_IArg,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_ORBit_IArg)
#define ORBIT_DECL_CORBA_sequence_ORBit_IArg 1
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_0 'o'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_1 'r'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_2 'b'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_3 'i'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_4 't'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_5 '_'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_6 'i'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_7 'n'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_8 't'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_9 'e'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_10 'r'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_11 'f'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_12 'a'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_13 'c'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IArg_14 'e'
#if !defined(_CORBA_sequence_ORBit_IArg_defined)
#define _CORBA_sequence_ORBit_IArg_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; ORBit_IArg* _buffer; CORBA_boolean _release; } CORBA_sequence_ORBit_IArg;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_ORBit_IArg_0)
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_0 'o'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_1 'r'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_2 'b'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_3 'i'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_4 't'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_5 '_'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_6 'i'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_7 'n'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_8 't'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_9 'e'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_10 'r'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_11 'f'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_12 'a'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_13 'c'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IArg_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_ORBit_IArg_struct;
#define TC_CORBA_sequence_ORBit_IArg ((CORBA_TypeCode)&TC_CORBA_sequence_ORBit_IArg_struct)
#endif
#define CORBA_sequence_ORBit_IArg__alloc() ((CORBA_sequence_ORBit_IArg *)ORBit_small_alloc (TC_CORBA_sequence_ORBit_IArg))
#define CORBA_sequence_ORBit_IArg__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_ORBit_IArg,(m),(d))
#define CORBA_sequence_ORBit_IArg_allocbuf(l) ((ORBit_IArg*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IArg, (l)))
#define CORBA_sequence_ORBit_IArg_allocbuf(l) ((ORBit_IArg*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IArg, (l)))
#endif
#if !defined(_ORBit_IArgs_defined)
#define _ORBit_IArgs_defined 1
typedef CORBA_sequence_ORBit_IArg ORBit_IArgs;
#define ORBit_IArgs_marshal(x,y,z) CORBA_sequence_ORBit_IArg_marshal((x),(y),(z))
#define ORBit_IArgs_demarshal(x,y,z,i) CORBA_sequence_ORBit_IArg_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_ORBit_IArgs_0)
#define TC_IMPL_TC_ORBit_IArgs_0 'o'
#define TC_IMPL_TC_ORBit_IArgs_1 'r'
#define TC_IMPL_TC_ORBit_IArgs_2 'b'
#define TC_IMPL_TC_ORBit_IArgs_3 'i'
#define TC_IMPL_TC_ORBit_IArgs_4 't'
#define TC_IMPL_TC_ORBit_IArgs_5 '_'
#define TC_IMPL_TC_ORBit_IArgs_6 'i'
#define TC_IMPL_TC_ORBit_IArgs_7 'n'
#define TC_IMPL_TC_ORBit_IArgs_8 't'
#define TC_IMPL_TC_ORBit_IArgs_9 'e'
#define TC_IMPL_TC_ORBit_IArgs_10 'r'
#define TC_IMPL_TC_ORBit_IArgs_11 'f'
#define TC_IMPL_TC_ORBit_IArgs_12 'a'
#define TC_IMPL_TC_ORBit_IArgs_13 'c'
#define TC_IMPL_TC_ORBit_IArgs_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IArgs_struct;
#define TC_ORBit_IArgs ((CORBA_TypeCode)&TC_ORBit_IArgs_struct)
#endif
#define ORBit_IArgs__alloc() ((ORBit_IArgs *)ORBit_small_alloc (TC_CORBA_sequence_ORBit_IArg))
#define ORBit_IArgs__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_ORBit_IArg,(m),(d))
#define ORBit_IArgs_allocbuf(l) ((ORBit_IArg*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IArg, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_TypeCode)
#define ORBIT_DECL_CORBA_sequence_CORBA_TypeCode 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_0 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_1 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_2 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_3 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_4 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_5 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_7 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_8 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_9 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_11 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_12 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_13 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_14 'e'
#if !defined(_CORBA_sequence_CORBA_TypeCode_defined)
#define _CORBA_sequence_CORBA_TypeCode_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_TypeCode* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_TypeCode;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_0 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_1 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_2 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_3 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_4 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_5 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_7 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_8 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_9 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_11 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_12 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_13 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_TypeCode_struct;
#define TC_CORBA_sequence_CORBA_TypeCode ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_TypeCode_struct)
#endif
#define CORBA_sequence_CORBA_TypeCode__alloc() ((CORBA_sequence_CORBA_TypeCode *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_TypeCode))
#define CORBA_sequence_CORBA_TypeCode__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_TypeCode,(m),(d))
#define CORBA_sequence_CORBA_TypeCode_allocbuf(l) ((CORBA_TypeCode*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_TypeCode, (l)))
#define CORBA_sequence_CORBA_TypeCode_allocbuf(l) ((CORBA_TypeCode*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_TypeCode, (l)))
#endif
#if !defined(_ORBit_ITypes_defined)
#define _ORBit_ITypes_defined 1
typedef CORBA_sequence_CORBA_TypeCode ORBit_ITypes;
#define ORBit_ITypes_marshal(x,y,z) CORBA_sequence_CORBA_TypeCode_marshal((x),(y),(z))
#define ORBit_ITypes_demarshal(x,y,z,i) CORBA_sequence_CORBA_TypeCode_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_ORBit_ITypes_0)
#define TC_IMPL_TC_ORBit_ITypes_0 'o'
#define TC_IMPL_TC_ORBit_ITypes_1 'r'
#define TC_IMPL_TC_ORBit_ITypes_2 'b'
#define TC_IMPL_TC_ORBit_ITypes_3 'i'
#define TC_IMPL_TC_ORBit_ITypes_4 't'
#define TC_IMPL_TC_ORBit_ITypes_5 '_'
#define TC_IMPL_TC_ORBit_ITypes_6 'i'
#define TC_IMPL_TC_ORBit_ITypes_7 'n'
#define TC_IMPL_TC_ORBit_ITypes_8 't'
#define TC_IMPL_TC_ORBit_ITypes_9 'e'
#define TC_IMPL_TC_ORBit_ITypes_10 'r'
#define TC_IMPL_TC_ORBit_ITypes_11 'f'
#define TC_IMPL_TC_ORBit_ITypes_12 'a'
#define TC_IMPL_TC_ORBit_ITypes_13 'c'
#define TC_IMPL_TC_ORBit_ITypes_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_ITypes_struct;
#define TC_ORBit_ITypes ((CORBA_TypeCode)&TC_ORBit_ITypes_struct)
#endif
#define ORBit_ITypes__alloc() ((ORBit_ITypes *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_TypeCode))
#define ORBit_ITypes__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_TypeCode,(m),(d))
#define ORBit_ITypes_allocbuf(l) ((CORBA_TypeCode*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_TypeCode, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_11 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_12 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_13 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_14 'e'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_11 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_12 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_13 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_ORBit_IContexts_defined)
#define _ORBit_IContexts_defined 1
typedef CORBA_sequence_CORBA_string ORBit_IContexts;
#define ORBit_IContexts_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define ORBit_IContexts_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_ORBit_IContexts_0)
#define TC_IMPL_TC_ORBit_IContexts_0 'o'
#define TC_IMPL_TC_ORBit_IContexts_1 'r'
#define TC_IMPL_TC_ORBit_IContexts_2 'b'
#define TC_IMPL_TC_ORBit_IContexts_3 'i'
#define TC_IMPL_TC_ORBit_IContexts_4 't'
#define TC_IMPL_TC_ORBit_IContexts_5 '_'
#define TC_IMPL_TC_ORBit_IContexts_6 'i'
#define TC_IMPL_TC_ORBit_IContexts_7 'n'
#define TC_IMPL_TC_ORBit_IContexts_8 't'
#define TC_IMPL_TC_ORBit_IContexts_9 'e'
#define TC_IMPL_TC_ORBit_IContexts_10 'r'
#define TC_IMPL_TC_ORBit_IContexts_11 'f'
#define TC_IMPL_TC_ORBit_IContexts_12 'a'
#define TC_IMPL_TC_ORBit_IContexts_13 'c'
#define TC_IMPL_TC_ORBit_IContexts_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IContexts_struct;
#define TC_ORBit_IContexts ((CORBA_TypeCode)&TC_ORBit_IContexts_struct)
#endif
#define ORBit_IContexts__alloc() ((ORBit_IContexts *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define ORBit_IContexts__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define ORBit_IContexts_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_ORBit_IMethodFlag_defined)
#define _ORBit_IMethodFlag_defined 1
typedef CORBA_long ORBit_IMethodFlag;
#define ORBit_IMethodFlag_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define ORBit_IMethodFlag_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_ORBit_IMethodFlag_0)
#define TC_IMPL_TC_ORBit_IMethodFlag_0 'o'
#define TC_IMPL_TC_ORBit_IMethodFlag_1 'r'
#define TC_IMPL_TC_ORBit_IMethodFlag_2 'b'
#define TC_IMPL_TC_ORBit_IMethodFlag_3 'i'
#define TC_IMPL_TC_ORBit_IMethodFlag_4 't'
#define TC_IMPL_TC_ORBit_IMethodFlag_5 '_'
#define TC_IMPL_TC_ORBit_IMethodFlag_6 'i'
#define TC_IMPL_TC_ORBit_IMethodFlag_7 'n'
#define TC_IMPL_TC_ORBit_IMethodFlag_8 't'
#define TC_IMPL_TC_ORBit_IMethodFlag_9 'e'
#define TC_IMPL_TC_ORBit_IMethodFlag_10 'r'
#define TC_IMPL_TC_ORBit_IMethodFlag_11 'f'
#define TC_IMPL_TC_ORBit_IMethodFlag_12 'a'
#define TC_IMPL_TC_ORBit_IMethodFlag_13 'c'
#define TC_IMPL_TC_ORBit_IMethodFlag_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IMethodFlag_struct;
#define TC_ORBit_IMethodFlag ((CORBA_TypeCode)&TC_ORBit_IMethodFlag_struct)
#endif
#define ORBit_IMethodFlag__alloc() ((ORBit_IMethodFlag *)ORBit_small_alloc (TC_CORBA_long))
#define ORBit_IMethodFlag__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#ifndef ORBit_I_METHOD_1_WAY
#define ORBit_I_METHOD_1_WAY 32
#endif /* !ORBit_I_METHOD_1_WAY */

#ifndef ORBit_I_METHOD_ALL_BASE
#define ORBit_I_METHOD_ALL_BASE 64
#endif /* !ORBit_I_METHOD_ALL_BASE */

#ifndef ORBit_I_METHOD_NO_OUT
#define ORBit_I_METHOD_NO_OUT 128
#endif /* !ORBit_I_METHOD_NO_OUT */

#ifndef ORBit_I_METHOD_HAS_CONTEXT
#define ORBit_I_METHOD_HAS_CONTEXT 256
#endif /* !ORBit_I_METHOD_HAS_CONTEXT */

#if !defined(_ORBit_IMethod_defined)
#define _ORBit_IMethod_defined 1
typedef struct ORBit_IMethod_type ORBit_IMethod;
struct ORBit_IMethod_type {
ORBit_IArgs arguments;
ORBit_IContexts contexts;
ORBit_ITypes exceptions;
CORBA_TypeCode ret;
CORBA_string name;
CORBA_long name_len;
ORBit_IMethodFlag flags;
};

#if !defined(TC_IMPL_TC_ORBit_IMethod_0)
#define TC_IMPL_TC_ORBit_IMethod_0 'o'
#define TC_IMPL_TC_ORBit_IMethod_1 'r'
#define TC_IMPL_TC_ORBit_IMethod_2 'b'
#define TC_IMPL_TC_ORBit_IMethod_3 'i'
#define TC_IMPL_TC_ORBit_IMethod_4 't'
#define TC_IMPL_TC_ORBit_IMethod_5 '_'
#define TC_IMPL_TC_ORBit_IMethod_6 'i'
#define TC_IMPL_TC_ORBit_IMethod_7 'n'
#define TC_IMPL_TC_ORBit_IMethod_8 't'
#define TC_IMPL_TC_ORBit_IMethod_9 'e'
#define TC_IMPL_TC_ORBit_IMethod_10 'r'
#define TC_IMPL_TC_ORBit_IMethod_11 'f'
#define TC_IMPL_TC_ORBit_IMethod_12 'a'
#define TC_IMPL_TC_ORBit_IMethod_13 'c'
#define TC_IMPL_TC_ORBit_IMethod_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IMethod_struct;
#define TC_ORBit_IMethod ((CORBA_TypeCode)&TC_ORBit_IMethod_struct)
#endif
#define ORBit_IMethod__alloc() ((ORBit_IMethod *)ORBit_small_alloc (TC_ORBit_IMethod))
#define ORBit_IMethod__freekids(m,d) ORBit_small_freekids (TC_ORBit_IMethod,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_ORBit_IMethod)
#define ORBIT_DECL_CORBA_sequence_ORBit_IMethod 1
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_0 'o'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_1 'r'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_2 'b'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_3 'i'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_4 't'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_5 '_'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_6 'i'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_7 'n'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_8 't'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_9 'e'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_10 'r'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_11 'f'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_12 'a'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_13 'c'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IMethod_14 'e'
#if !defined(_CORBA_sequence_ORBit_IMethod_defined)
#define _CORBA_sequence_ORBit_IMethod_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; ORBit_IMethod* _buffer; CORBA_boolean _release; } CORBA_sequence_ORBit_IMethod;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_0)
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_0 'o'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_1 'r'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_2 'b'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_3 'i'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_4 't'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_5 '_'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_6 'i'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_7 'n'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_8 't'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_9 'e'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_10 'r'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_11 'f'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_12 'a'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_13 'c'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IMethod_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_ORBit_IMethod_struct;
#define TC_CORBA_sequence_ORBit_IMethod ((CORBA_TypeCode)&TC_CORBA_sequence_ORBit_IMethod_struct)
#endif
#define CORBA_sequence_ORBit_IMethod__alloc() ((CORBA_sequence_ORBit_IMethod *)ORBit_small_alloc (TC_CORBA_sequence_ORBit_IMethod))
#define CORBA_sequence_ORBit_IMethod__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_ORBit_IMethod,(m),(d))
#define CORBA_sequence_ORBit_IMethod_allocbuf(l) ((ORBit_IMethod*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IMethod, (l)))
#define CORBA_sequence_ORBit_IMethod_allocbuf(l) ((ORBit_IMethod*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IMethod, (l)))
#endif
#if !defined(_ORBit_IMethods_defined)
#define _ORBit_IMethods_defined 1
typedef CORBA_sequence_ORBit_IMethod ORBit_IMethods;
#define ORBit_IMethods_marshal(x,y,z) CORBA_sequence_ORBit_IMethod_marshal((x),(y),(z))
#define ORBit_IMethods_demarshal(x,y,z,i) CORBA_sequence_ORBit_IMethod_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_ORBit_IMethods_0)
#define TC_IMPL_TC_ORBit_IMethods_0 'o'
#define TC_IMPL_TC_ORBit_IMethods_1 'r'
#define TC_IMPL_TC_ORBit_IMethods_2 'b'
#define TC_IMPL_TC_ORBit_IMethods_3 'i'
#define TC_IMPL_TC_ORBit_IMethods_4 't'
#define TC_IMPL_TC_ORBit_IMethods_5 '_'
#define TC_IMPL_TC_ORBit_IMethods_6 'i'
#define TC_IMPL_TC_ORBit_IMethods_7 'n'
#define TC_IMPL_TC_ORBit_IMethods_8 't'
#define TC_IMPL_TC_ORBit_IMethods_9 'e'
#define TC_IMPL_TC_ORBit_IMethods_10 'r'
#define TC_IMPL_TC_ORBit_IMethods_11 'f'
#define TC_IMPL_TC_ORBit_IMethods_12 'a'
#define TC_IMPL_TC_ORBit_IMethods_13 'c'
#define TC_IMPL_TC_ORBit_IMethods_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IMethods_struct;
#define TC_ORBit_IMethods ((CORBA_TypeCode)&TC_ORBit_IMethods_struct)
#endif
#define ORBit_IMethods__alloc() ((ORBit_IMethods *)ORBit_small_alloc (TC_CORBA_sequence_ORBit_IMethod))
#define ORBit_IMethods__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_ORBit_IMethod,(m),(d))
#define ORBit_IMethods_allocbuf(l) ((ORBit_IMethod*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IMethod, (l)))
#endif
#if !defined(_ORBit_IInterface_defined)
#define _ORBit_IInterface_defined 1
typedef struct ORBit_IInterface_type ORBit_IInterface;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_6 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_7 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_8 't'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_9 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_10 'r'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_11 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_12 'a'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_13 'c'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_14 'e'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_6 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_7 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_8 't'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_9 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_10 'r'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_11 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_12 'a'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_13 'c'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
struct ORBit_IInterface_type {
CORBA_TypeCode tc;
ORBit_IMethods methods;
CORBA_sequence_CORBA_string base_interfaces;
};

#if !defined(TC_IMPL_TC_ORBit_IInterface_0)
#define TC_IMPL_TC_ORBit_IInterface_0 'o'
#define TC_IMPL_TC_ORBit_IInterface_1 'r'
#define TC_IMPL_TC_ORBit_IInterface_2 'b'
#define TC_IMPL_TC_ORBit_IInterface_3 'i'
#define TC_IMPL_TC_ORBit_IInterface_4 't'
#define TC_IMPL_TC_ORBit_IInterface_5 '_'
#define TC_IMPL_TC_ORBit_IInterface_6 'i'
#define TC_IMPL_TC_ORBit_IInterface_7 'n'
#define TC_IMPL_TC_ORBit_IInterface_8 't'
#define TC_IMPL_TC_ORBit_IInterface_9 'e'
#define TC_IMPL_TC_ORBit_IInterface_10 'r'
#define TC_IMPL_TC_ORBit_IInterface_11 'f'
#define TC_IMPL_TC_ORBit_IInterface_12 'a'
#define TC_IMPL_TC_ORBit_IInterface_13 'c'
#define TC_IMPL_TC_ORBit_IInterface_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IInterface_struct;
#define TC_ORBit_IInterface ((CORBA_TypeCode)&TC_ORBit_IInterface_struct)
#endif
#define ORBit_IInterface__alloc() ((ORBit_IInterface *)ORBit_small_alloc (TC_ORBit_IInterface))
#define ORBit_IInterface__freekids(m,d) ORBit_small_freekids (TC_ORBit_IInterface,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_ORBit_IInterface)
#define ORBIT_DECL_CORBA_sequence_ORBit_IInterface 1
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_0 'o'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_1 'r'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_2 'b'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_3 'i'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_4 't'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_5 '_'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_6 'i'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_7 'n'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_8 't'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_9 'e'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_10 'r'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_11 'f'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_12 'a'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_13 'c'
#define ORBIT_IMPL_CORBA_sequence_ORBit_IInterface_14 'e'
#if !defined(_CORBA_sequence_ORBit_IInterface_defined)
#define _CORBA_sequence_ORBit_IInterface_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; ORBit_IInterface* _buffer; CORBA_boolean _release; } CORBA_sequence_ORBit_IInterface;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_0)
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_0 'o'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_1 'r'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_2 'b'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_3 'i'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_4 't'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_5 '_'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_6 'i'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_7 'n'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_8 't'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_9 'e'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_10 'r'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_11 'f'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_12 'a'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_13 'c'
#define TC_IMPL_TC_CORBA_sequence_ORBit_IInterface_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_ORBit_IInterface_struct;
#define TC_CORBA_sequence_ORBit_IInterface ((CORBA_TypeCode)&TC_CORBA_sequence_ORBit_IInterface_struct)
#endif
#define CORBA_sequence_ORBit_IInterface__alloc() ((CORBA_sequence_ORBit_IInterface *)ORBit_small_alloc (TC_CORBA_sequence_ORBit_IInterface))
#define CORBA_sequence_ORBit_IInterface__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_ORBit_IInterface,(m),(d))
#define CORBA_sequence_ORBit_IInterface_allocbuf(l) ((ORBit_IInterface*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IInterface, (l)))
#define CORBA_sequence_ORBit_IInterface_allocbuf(l) ((ORBit_IInterface*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IInterface, (l)))
#endif
#if !defined(_ORBit_IInterfaces_defined)
#define _ORBit_IInterfaces_defined 1
typedef CORBA_sequence_ORBit_IInterface ORBit_IInterfaces;
#define ORBit_IInterfaces_marshal(x,y,z) CORBA_sequence_ORBit_IInterface_marshal((x),(y),(z))
#define ORBit_IInterfaces_demarshal(x,y,z,i) CORBA_sequence_ORBit_IInterface_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_ORBit_IInterfaces_0)
#define TC_IMPL_TC_ORBit_IInterfaces_0 'o'
#define TC_IMPL_TC_ORBit_IInterfaces_1 'r'
#define TC_IMPL_TC_ORBit_IInterfaces_2 'b'
#define TC_IMPL_TC_ORBit_IInterfaces_3 'i'
#define TC_IMPL_TC_ORBit_IInterfaces_4 't'
#define TC_IMPL_TC_ORBit_IInterfaces_5 '_'
#define TC_IMPL_TC_ORBit_IInterfaces_6 'i'
#define TC_IMPL_TC_ORBit_IInterfaces_7 'n'
#define TC_IMPL_TC_ORBit_IInterfaces_8 't'
#define TC_IMPL_TC_ORBit_IInterfaces_9 'e'
#define TC_IMPL_TC_ORBit_IInterfaces_10 'r'
#define TC_IMPL_TC_ORBit_IInterfaces_11 'f'
#define TC_IMPL_TC_ORBit_IInterfaces_12 'a'
#define TC_IMPL_TC_ORBit_IInterfaces_13 'c'
#define TC_IMPL_TC_ORBit_IInterfaces_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_IInterfaces_struct;
#define TC_ORBit_IInterfaces ((CORBA_TypeCode)&TC_ORBit_IInterfaces_struct)
#endif
#define ORBit_IInterfaces__alloc() ((ORBit_IInterfaces *)ORBit_small_alloc (TC_CORBA_sequence_ORBit_IInterface))
#define ORBit_IInterfaces__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_ORBit_IInterface,(m),(d))
#define ORBit_IInterfaces_allocbuf(l) ((ORBit_IInterface*)ORBit_small_allocbuf (TC_CORBA_sequence_ORBit_IInterface, (l)))
#endif
#undef ex_ORBit_NoIInterface
#define ex_ORBit_NoIInterface "IDL:ORBit/NoIInterface:1.0"
#if !defined(_ORBit_NoIInterface_defined)
#define _ORBit_NoIInterface_defined 1
typedef struct ORBit_NoIInterface_type ORBit_NoIInterface;
struct ORBit_NoIInterface_type {
int dummy;
};

#if !defined(TC_IMPL_TC_ORBit_NoIInterface_0)
#define TC_IMPL_TC_ORBit_NoIInterface_0 'o'
#define TC_IMPL_TC_ORBit_NoIInterface_1 'r'
#define TC_IMPL_TC_ORBit_NoIInterface_2 'b'
#define TC_IMPL_TC_ORBit_NoIInterface_3 'i'
#define TC_IMPL_TC_ORBit_NoIInterface_4 't'
#define TC_IMPL_TC_ORBit_NoIInterface_5 '_'
#define TC_IMPL_TC_ORBit_NoIInterface_6 'i'
#define TC_IMPL_TC_ORBit_NoIInterface_7 'n'
#define TC_IMPL_TC_ORBit_NoIInterface_8 't'
#define TC_IMPL_TC_ORBit_NoIInterface_9 'e'
#define TC_IMPL_TC_ORBit_NoIInterface_10 'r'
#define TC_IMPL_TC_ORBit_NoIInterface_11 'f'
#define TC_IMPL_TC_ORBit_NoIInterface_12 'a'
#define TC_IMPL_TC_ORBit_NoIInterface_13 'c'
#define TC_IMPL_TC_ORBit_NoIInterface_14 'e'
#ifdef ORBIT_IDL_C_IMODULE_orbit_interface
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_ORBit_NoIInterface_struct;
#define TC_ORBit_NoIInterface ((CORBA_TypeCode)&TC_ORBit_NoIInterface_struct)
#endif
#define ORBit_NoIInterface__alloc() ((ORBit_NoIInterface *)ORBit_small_alloc (TC_ORBit_NoIInterface))
#define ORBit_NoIInterface__freekids(m,d) ORBit_small_freekids (TC_ORBit_NoIInterface,(m),(d))
#endif

/** stub prototypes **/
#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
