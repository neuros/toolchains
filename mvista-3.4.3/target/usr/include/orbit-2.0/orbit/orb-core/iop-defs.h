/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef iop_defs_H
#define iop_defs_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(_IOP_EndpointIdPositionComponent_defined)
#define _IOP_EndpointIdPositionComponent_defined 1
typedef struct IOP_EndpointIdPositionComponent_type IOP_EndpointIdPositionComponent;
struct IOP_EndpointIdPositionComponent_type {
CORBA_unsigned_short begin;
CORBA_unsigned_short end;
};

#if !defined(TC_IMPL_TC_IOP_EndpointIdPositionComponent_0)
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_0 'i'
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_1 'o'
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_2 'p'
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_3 '_'
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_4 'd'
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_5 'e'
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_6 'f'
#define TC_IMPL_TC_IOP_EndpointIdPositionComponent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_EndpointIdPositionComponent_struct;
#define TC_IOP_EndpointIdPositionComponent ((CORBA_TypeCode)&TC_IOP_EndpointIdPositionComponent_struct)
#endif
#define IOP_EndpointIdPositionComponent__alloc() ((IOP_EndpointIdPositionComponent *)ORBit_small_alloc (TC_IOP_EndpointIdPositionComponent))
#define IOP_EndpointIdPositionComponent__freekids(m,d) ORBit_small_freekids (TC_IOP_EndpointIdPositionComponent,(m),(d))
#endif
#if !defined(_IOP_ProfileId_defined)
#define _IOP_ProfileId_defined 1
typedef CORBA_unsigned_long IOP_ProfileId;
#define IOP_ProfileId_marshal(x,y,z) CORBA_unsigned_long_marshal((x),(y),(z))
#define IOP_ProfileId_demarshal(x,y,z,i) CORBA_unsigned_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_IOP_ProfileId_0)
#define TC_IMPL_TC_IOP_ProfileId_0 'i'
#define TC_IMPL_TC_IOP_ProfileId_1 'o'
#define TC_IMPL_TC_IOP_ProfileId_2 'p'
#define TC_IMPL_TC_IOP_ProfileId_3 '_'
#define TC_IMPL_TC_IOP_ProfileId_4 'd'
#define TC_IMPL_TC_IOP_ProfileId_5 'e'
#define TC_IMPL_TC_IOP_ProfileId_6 'f'
#define TC_IMPL_TC_IOP_ProfileId_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_ProfileId_struct;
#define TC_IOP_ProfileId ((CORBA_TypeCode)&TC_IOP_ProfileId_struct)
#endif
#define IOP_ProfileId__alloc() ((IOP_ProfileId *)ORBit_small_alloc (TC_CORBA_unsigned_long))
#define IOP_ProfileId__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long,(m),(d))
#endif
#ifndef IOP_TAG_INTERNET_IOP
#define IOP_TAG_INTERNET_IOP 0U
#endif /* !IOP_TAG_INTERNET_IOP */

#ifndef IOP_TAG_MULTIPLE_COMPONENTS
#define IOP_TAG_MULTIPLE_COMPONENTS 1U
#endif /* !IOP_TAG_MULTIPLE_COMPONENTS */

#if !defined(_IOP_TaggedProfile_defined)
#define _IOP_TaggedProfile_defined 1
typedef struct IOP_TaggedProfile_type IOP_TaggedProfile;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct IOP_TaggedProfile_type {
IOP_ProfileId tag;
CORBA_sequence_CORBA_octet profile_data;
};

#if !defined(TC_IMPL_TC_IOP_TaggedProfile_0)
#define TC_IMPL_TC_IOP_TaggedProfile_0 'i'
#define TC_IMPL_TC_IOP_TaggedProfile_1 'o'
#define TC_IMPL_TC_IOP_TaggedProfile_2 'p'
#define TC_IMPL_TC_IOP_TaggedProfile_3 '_'
#define TC_IMPL_TC_IOP_TaggedProfile_4 'd'
#define TC_IMPL_TC_IOP_TaggedProfile_5 'e'
#define TC_IMPL_TC_IOP_TaggedProfile_6 'f'
#define TC_IMPL_TC_IOP_TaggedProfile_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_TaggedProfile_struct;
#define TC_IOP_TaggedProfile ((CORBA_TypeCode)&TC_IOP_TaggedProfile_struct)
#endif
#define IOP_TaggedProfile__alloc() ((IOP_TaggedProfile *)ORBit_small_alloc (TC_IOP_TaggedProfile))
#define IOP_TaggedProfile__freekids(m,d) ORBit_small_freekids (TC_IOP_TaggedProfile,(m),(d))
#endif
#if !defined(_IOP_IOR_defined)
#define _IOP_IOR_defined 1
typedef struct IOP_IOR_type IOP_IOR;
#if !defined(ORBIT_DECL_CORBA_sequence_IOP_TaggedProfile)
#define ORBIT_DECL_CORBA_sequence_IOP_TaggedProfile 1
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_0 'i'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_1 'o'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_2 'p'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_3 '_'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_4 'd'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_5 'e'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_6 'f'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedProfile_7 's'
#if !defined(_CORBA_sequence_IOP_TaggedProfile_defined)
#define _CORBA_sequence_IOP_TaggedProfile_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; IOP_TaggedProfile* _buffer; CORBA_boolean _release; } CORBA_sequence_IOP_TaggedProfile;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_0)
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_0 'i'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_1 'o'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_2 'p'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_3 '_'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_4 'd'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_5 'e'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_6 'f'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedProfile_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_IOP_TaggedProfile_struct;
#define TC_CORBA_sequence_IOP_TaggedProfile ((CORBA_TypeCode)&TC_CORBA_sequence_IOP_TaggedProfile_struct)
#endif
#define CORBA_sequence_IOP_TaggedProfile__alloc() ((CORBA_sequence_IOP_TaggedProfile *)ORBit_small_alloc (TC_CORBA_sequence_IOP_TaggedProfile))
#define CORBA_sequence_IOP_TaggedProfile__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IOP_TaggedProfile,(m),(d))
#define CORBA_sequence_IOP_TaggedProfile_allocbuf(l) ((IOP_TaggedProfile*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedProfile, (l)))
#define CORBA_sequence_IOP_TaggedProfile_allocbuf(l) ((IOP_TaggedProfile*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedProfile, (l)))
#endif
struct IOP_IOR_type {
CORBA_string type_id;
CORBA_sequence_IOP_TaggedProfile profiles;
};

#if !defined(TC_IMPL_TC_IOP_IOR_0)
#define TC_IMPL_TC_IOP_IOR_0 'i'
#define TC_IMPL_TC_IOP_IOR_1 'o'
#define TC_IMPL_TC_IOP_IOR_2 'p'
#define TC_IMPL_TC_IOP_IOR_3 '_'
#define TC_IMPL_TC_IOP_IOR_4 'd'
#define TC_IMPL_TC_IOP_IOR_5 'e'
#define TC_IMPL_TC_IOP_IOR_6 'f'
#define TC_IMPL_TC_IOP_IOR_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_IOR_struct;
#define TC_IOP_IOR ((CORBA_TypeCode)&TC_IOP_IOR_struct)
#endif
#define IOP_IOR__alloc() ((IOP_IOR *)ORBit_small_alloc (TC_IOP_IOR))
#define IOP_IOR__freekids(m,d) ORBit_small_freekids (TC_IOP_IOR,(m),(d))
#endif
#if !defined(_IOP_ComponentId_defined)
#define _IOP_ComponentId_defined 1
typedef CORBA_unsigned_long IOP_ComponentId;
#define IOP_ComponentId_marshal(x,y,z) CORBA_unsigned_long_marshal((x),(y),(z))
#define IOP_ComponentId_demarshal(x,y,z,i) CORBA_unsigned_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_IOP_ComponentId_0)
#define TC_IMPL_TC_IOP_ComponentId_0 'i'
#define TC_IMPL_TC_IOP_ComponentId_1 'o'
#define TC_IMPL_TC_IOP_ComponentId_2 'p'
#define TC_IMPL_TC_IOP_ComponentId_3 '_'
#define TC_IMPL_TC_IOP_ComponentId_4 'd'
#define TC_IMPL_TC_IOP_ComponentId_5 'e'
#define TC_IMPL_TC_IOP_ComponentId_6 'f'
#define TC_IMPL_TC_IOP_ComponentId_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_ComponentId_struct;
#define TC_IOP_ComponentId ((CORBA_TypeCode)&TC_IOP_ComponentId_struct)
#endif
#define IOP_ComponentId__alloc() ((IOP_ComponentId *)ORBit_small_alloc (TC_CORBA_unsigned_long))
#define IOP_ComponentId__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long,(m),(d))
#endif
#if !defined(_IOP_TaggedComponent_defined)
#define _IOP_TaggedComponent_defined 1
typedef struct IOP_TaggedComponent_type IOP_TaggedComponent;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct IOP_TaggedComponent_type {
IOP_ComponentId tag;
CORBA_sequence_CORBA_octet component_data;
};

#if !defined(TC_IMPL_TC_IOP_TaggedComponent_0)
#define TC_IMPL_TC_IOP_TaggedComponent_0 'i'
#define TC_IMPL_TC_IOP_TaggedComponent_1 'o'
#define TC_IMPL_TC_IOP_TaggedComponent_2 'p'
#define TC_IMPL_TC_IOP_TaggedComponent_3 '_'
#define TC_IMPL_TC_IOP_TaggedComponent_4 'd'
#define TC_IMPL_TC_IOP_TaggedComponent_5 'e'
#define TC_IMPL_TC_IOP_TaggedComponent_6 'f'
#define TC_IMPL_TC_IOP_TaggedComponent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_TaggedComponent_struct;
#define TC_IOP_TaggedComponent ((CORBA_TypeCode)&TC_IOP_TaggedComponent_struct)
#endif
#define IOP_TaggedComponent__alloc() ((IOP_TaggedComponent *)ORBit_small_alloc (TC_IOP_TaggedComponent))
#define IOP_TaggedComponent__freekids(m,d) ORBit_small_freekids (TC_IOP_TaggedComponent,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_IOP_TaggedComponent)
#define ORBIT_DECL_CORBA_sequence_IOP_TaggedComponent 1
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_0 'i'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_1 'o'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_2 'p'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_3 '_'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_4 'd'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_5 'e'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_6 'f'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_7 's'
#if !defined(_CORBA_sequence_IOP_TaggedComponent_defined)
#define _CORBA_sequence_IOP_TaggedComponent_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; IOP_TaggedComponent* _buffer; CORBA_boolean _release; } CORBA_sequence_IOP_TaggedComponent;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_0)
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_0 'i'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_1 'o'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_2 'p'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_3 '_'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_4 'd'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_5 'e'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_6 'f'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_IOP_TaggedComponent_struct;
#define TC_CORBA_sequence_IOP_TaggedComponent ((CORBA_TypeCode)&TC_CORBA_sequence_IOP_TaggedComponent_struct)
#endif
#define CORBA_sequence_IOP_TaggedComponent__alloc() ((CORBA_sequence_IOP_TaggedComponent *)ORBit_small_alloc (TC_CORBA_sequence_IOP_TaggedComponent))
#define CORBA_sequence_IOP_TaggedComponent__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IOP_TaggedComponent,(m),(d))
#define CORBA_sequence_IOP_TaggedComponent_allocbuf(l) ((IOP_TaggedComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedComponent, (l)))
#define CORBA_sequence_IOP_TaggedComponent_allocbuf(l) ((IOP_TaggedComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedComponent, (l)))
#endif
#if !defined(_IOP_MultipleComponentProfile_defined)
#define _IOP_MultipleComponentProfile_defined 1
typedef CORBA_sequence_IOP_TaggedComponent IOP_MultipleComponentProfile;
#define IOP_MultipleComponentProfile_marshal(x,y,z) CORBA_sequence_IOP_TaggedComponent_marshal((x),(y),(z))
#define IOP_MultipleComponentProfile_demarshal(x,y,z,i) CORBA_sequence_IOP_TaggedComponent_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_IOP_MultipleComponentProfile_0)
#define TC_IMPL_TC_IOP_MultipleComponentProfile_0 'i'
#define TC_IMPL_TC_IOP_MultipleComponentProfile_1 'o'
#define TC_IMPL_TC_IOP_MultipleComponentProfile_2 'p'
#define TC_IMPL_TC_IOP_MultipleComponentProfile_3 '_'
#define TC_IMPL_TC_IOP_MultipleComponentProfile_4 'd'
#define TC_IMPL_TC_IOP_MultipleComponentProfile_5 'e'
#define TC_IMPL_TC_IOP_MultipleComponentProfile_6 'f'
#define TC_IMPL_TC_IOP_MultipleComponentProfile_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_MultipleComponentProfile_struct;
#define TC_IOP_MultipleComponentProfile ((CORBA_TypeCode)&TC_IOP_MultipleComponentProfile_struct)
#endif
#define IOP_MultipleComponentProfile__alloc() ((IOP_MultipleComponentProfile *)ORBit_small_alloc (TC_CORBA_sequence_IOP_TaggedComponent))
#define IOP_MultipleComponentProfile__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IOP_TaggedComponent,(m),(d))
#define IOP_MultipleComponentProfile_allocbuf(l) ((IOP_TaggedComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedComponent, (l)))
#endif
#ifndef IOP_TAG_ORB_TYPE
#define IOP_TAG_ORB_TYPE 0U
#endif /* !IOP_TAG_ORB_TYPE */

#ifndef IOP_TAG_CODE_SETS
#define IOP_TAG_CODE_SETS 1U
#endif /* !IOP_TAG_CODE_SETS */

#ifndef IOP_TAG_POLICIES
#define IOP_TAG_POLICIES 2U
#endif /* !IOP_TAG_POLICIES */

#ifndef IOP_TAG_ALTERNATE_IIOP_ADDRESS
#define IOP_TAG_ALTERNATE_IIOP_ADDRESS 3U
#endif /* !IOP_TAG_ALTERNATE_IIOP_ADDRESS */

#ifndef IOP_TAG_ASSOCIATION_OPTIONS
#define IOP_TAG_ASSOCIATION_OPTIONS 13U
#endif /* !IOP_TAG_ASSOCIATION_OPTIONS */

#ifndef IOP_TAG_SEC_NAME
#define IOP_TAG_SEC_NAME 14U
#endif /* !IOP_TAG_SEC_NAME */

#ifndef IOP_TAG_SPKM_1_SEC_MECH
#define IOP_TAG_SPKM_1_SEC_MECH 15U
#endif /* !IOP_TAG_SPKM_1_SEC_MECH */

#ifndef IOP_TAG_SPKM_2_SEC_MECH
#define IOP_TAG_SPKM_2_SEC_MECH 16U
#endif /* !IOP_TAG_SPKM_2_SEC_MECH */

#ifndef IOP_TAG_KerberosV5_SEC_MECH
#define IOP_TAG_KerberosV5_SEC_MECH 17U
#endif /* !IOP_TAG_KerberosV5_SEC_MECH */

#ifndef IOP_TAG_CSI_ECMA_Secret_SEC_MECH
#define IOP_TAG_CSI_ECMA_Secret_SEC_MECH 18U
#endif /* !IOP_TAG_CSI_ECMA_Secret_SEC_MECH */

#ifndef IOP_TAG_CSI_ECMA_Hybrid_SEC_MECH
#define IOP_TAG_CSI_ECMA_Hybrid_SEC_MECH 19U
#endif /* !IOP_TAG_CSI_ECMA_Hybrid_SEC_MECH */

#ifndef IOP_TAG_SSL_SEC_TRANS
#define IOP_TAG_SSL_SEC_TRANS 20U
#endif /* !IOP_TAG_SSL_SEC_TRANS */

#ifndef IOP_TAG_CSI_ECMA_Public_SEC_MECH
#define IOP_TAG_CSI_ECMA_Public_SEC_MECH 21U
#endif /* !IOP_TAG_CSI_ECMA_Public_SEC_MECH */

#ifndef IOP_TAG_GENERIC_SEC_MECH
#define IOP_TAG_GENERIC_SEC_MECH 22U
#endif /* !IOP_TAG_GENERIC_SEC_MECH */

#ifndef IOP_TAG_JAVA_CODEBASE
#define IOP_TAG_JAVA_CODEBASE 25U
#endif /* !IOP_TAG_JAVA_CODEBASE */

#ifndef IOP_TAG_COMPLETE_OBJECT_KEY
#define IOP_TAG_COMPLETE_OBJECT_KEY 5U
#endif /* !IOP_TAG_COMPLETE_OBJECT_KEY */

#ifndef IOP_TAG_ENDPOINT_ID_POSITION
#define IOP_TAG_ENDPOINT_ID_POSITION 6U
#endif /* !IOP_TAG_ENDPOINT_ID_POSITION */

#ifndef IOP_TAG_LOCATION_POLICY
#define IOP_TAG_LOCATION_POLICY 12U
#endif /* !IOP_TAG_LOCATION_POLICY */

#ifndef IOP_TAG_DCE_STRING_BINDING
#define IOP_TAG_DCE_STRING_BINDING 100U
#endif /* !IOP_TAG_DCE_STRING_BINDING */

#ifndef IOP_TAG_DCE_BINDING_NAME
#define IOP_TAG_DCE_BINDING_NAME 101U
#endif /* !IOP_TAG_DCE_BINDING_NAME */

#ifndef IOP_TAG_DCE_NO_PIPES
#define IOP_TAG_DCE_NO_PIPES 102U
#endif /* !IOP_TAG_DCE_NO_PIPES */

#ifndef IOP_TAG_DCE_SEC_MECH
#define IOP_TAG_DCE_SEC_MECH 103U
#endif /* !IOP_TAG_DCE_SEC_MECH */

#if !defined(_IOP_ServiceId_defined)
#define _IOP_ServiceId_defined 1
typedef CORBA_unsigned_long IOP_ServiceId;
#define IOP_ServiceId_marshal(x,y,z) CORBA_unsigned_long_marshal((x),(y),(z))
#define IOP_ServiceId_demarshal(x,y,z,i) CORBA_unsigned_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_IOP_ServiceId_0)
#define TC_IMPL_TC_IOP_ServiceId_0 'i'
#define TC_IMPL_TC_IOP_ServiceId_1 'o'
#define TC_IMPL_TC_IOP_ServiceId_2 'p'
#define TC_IMPL_TC_IOP_ServiceId_3 '_'
#define TC_IMPL_TC_IOP_ServiceId_4 'd'
#define TC_IMPL_TC_IOP_ServiceId_5 'e'
#define TC_IMPL_TC_IOP_ServiceId_6 'f'
#define TC_IMPL_TC_IOP_ServiceId_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_ServiceId_struct;
#define TC_IOP_ServiceId ((CORBA_TypeCode)&TC_IOP_ServiceId_struct)
#endif
#define IOP_ServiceId__alloc() ((IOP_ServiceId *)ORBit_small_alloc (TC_CORBA_unsigned_long))
#define IOP_ServiceId__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long,(m),(d))
#endif
#if !defined(_IOP_ServiceContext_defined)
#define _IOP_ServiceContext_defined 1
typedef struct IOP_ServiceContext_type IOP_ServiceContext;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct IOP_ServiceContext_type {
IOP_ServiceId context_id;
CORBA_sequence_CORBA_octet context_data;
};

#if !defined(TC_IMPL_TC_IOP_ServiceContext_0)
#define TC_IMPL_TC_IOP_ServiceContext_0 'i'
#define TC_IMPL_TC_IOP_ServiceContext_1 'o'
#define TC_IMPL_TC_IOP_ServiceContext_2 'p'
#define TC_IMPL_TC_IOP_ServiceContext_3 '_'
#define TC_IMPL_TC_IOP_ServiceContext_4 'd'
#define TC_IMPL_TC_IOP_ServiceContext_5 'e'
#define TC_IMPL_TC_IOP_ServiceContext_6 'f'
#define TC_IMPL_TC_IOP_ServiceContext_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_ServiceContext_struct;
#define TC_IOP_ServiceContext ((CORBA_TypeCode)&TC_IOP_ServiceContext_struct)
#endif
#define IOP_ServiceContext__alloc() ((IOP_ServiceContext *)ORBit_small_alloc (TC_IOP_ServiceContext))
#define IOP_ServiceContext__freekids(m,d) ORBit_small_freekids (TC_IOP_ServiceContext,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_IOP_ServiceContext)
#define ORBIT_DECL_CORBA_sequence_IOP_ServiceContext 1
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_0 'i'
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_1 'o'
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_2 'p'
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_3 '_'
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_4 'd'
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_5 'e'
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_6 'f'
#define ORBIT_IMPL_CORBA_sequence_IOP_ServiceContext_7 's'
#if !defined(_CORBA_sequence_IOP_ServiceContext_defined)
#define _CORBA_sequence_IOP_ServiceContext_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; IOP_ServiceContext* _buffer; CORBA_boolean _release; } CORBA_sequence_IOP_ServiceContext;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_0)
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_0 'i'
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_1 'o'
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_2 'p'
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_3 '_'
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_4 'd'
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_5 'e'
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_6 'f'
#define TC_IMPL_TC_CORBA_sequence_IOP_ServiceContext_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_IOP_ServiceContext_struct;
#define TC_CORBA_sequence_IOP_ServiceContext ((CORBA_TypeCode)&TC_CORBA_sequence_IOP_ServiceContext_struct)
#endif
#define CORBA_sequence_IOP_ServiceContext__alloc() ((CORBA_sequence_IOP_ServiceContext *)ORBit_small_alloc (TC_CORBA_sequence_IOP_ServiceContext))
#define CORBA_sequence_IOP_ServiceContext__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IOP_ServiceContext,(m),(d))
#define CORBA_sequence_IOP_ServiceContext_allocbuf(l) ((IOP_ServiceContext*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_ServiceContext, (l)))
#define CORBA_sequence_IOP_ServiceContext_allocbuf(l) ((IOP_ServiceContext*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_ServiceContext, (l)))
#endif
#if !defined(_IOP_ServiceContextList_defined)
#define _IOP_ServiceContextList_defined 1
typedef CORBA_sequence_IOP_ServiceContext IOP_ServiceContextList;
#define IOP_ServiceContextList_marshal(x,y,z) CORBA_sequence_IOP_ServiceContext_marshal((x),(y),(z))
#define IOP_ServiceContextList_demarshal(x,y,z,i) CORBA_sequence_IOP_ServiceContext_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_IOP_ServiceContextList_0)
#define TC_IMPL_TC_IOP_ServiceContextList_0 'i'
#define TC_IMPL_TC_IOP_ServiceContextList_1 'o'
#define TC_IMPL_TC_IOP_ServiceContextList_2 'p'
#define TC_IMPL_TC_IOP_ServiceContextList_3 '_'
#define TC_IMPL_TC_IOP_ServiceContextList_4 'd'
#define TC_IMPL_TC_IOP_ServiceContextList_5 'e'
#define TC_IMPL_TC_IOP_ServiceContextList_6 'f'
#define TC_IMPL_TC_IOP_ServiceContextList_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_ServiceContextList_struct;
#define TC_IOP_ServiceContextList ((CORBA_TypeCode)&TC_IOP_ServiceContextList_struct)
#endif
#define IOP_ServiceContextList__alloc() ((IOP_ServiceContextList *)ORBit_small_alloc (TC_CORBA_sequence_IOP_ServiceContext))
#define IOP_ServiceContextList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IOP_ServiceContext,(m),(d))
#define IOP_ServiceContextList_allocbuf(l) ((IOP_ServiceContext*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_ServiceContext, (l)))
#endif
#ifndef IOP_TransactionService
#define IOP_TransactionService 0U
#endif /* !IOP_TransactionService */

#ifndef IOP_CodeSets
#define IOP_CodeSets 1U
#endif /* !IOP_CodeSets */

#ifndef IOP_ChainBypassCheck
#define IOP_ChainBypassCheck 2U
#endif /* !IOP_ChainBypassCheck */

#ifndef IOP_ChainBypassInfo
#define IOP_ChainBypassInfo 3U
#endif /* !IOP_ChainBypassInfo */

#ifndef IOP_LogicalThreadId
#define IOP_LogicalThreadId 4U
#endif /* !IOP_LogicalThreadId */

#ifndef IOP_BI_DIR_IIOP
#define IOP_BI_DIR_IIOP 5U
#endif /* !IOP_BI_DIR_IIOP */

#ifndef IOP_SendingContextRunTime
#define IOP_SendingContextRunTime 6U
#endif /* !IOP_SendingContextRunTime */

#ifndef IOP_INVOCATION_POLICIES
#define IOP_INVOCATION_POLICIES 7U
#endif /* !IOP_INVOCATION_POLICIES */

#ifndef IOP_FORWARDED_IDENTITY
#define IOP_FORWARDED_IDENTITY 8U
#endif /* !IOP_FORWARDED_IDENTITY */

#ifndef IOP_UnknownExceptionInfo
#define IOP_UnknownExceptionInfo 9U
#endif /* !IOP_UnknownExceptionInfo */

#if !defined(_IIOP_Version_defined)
#define _IIOP_Version_defined 1
typedef struct IIOP_Version_type IIOP_Version;
struct IIOP_Version_type {
CORBA_octet major;
CORBA_octet minor;
};

#if !defined(TC_IMPL_TC_IIOP_Version_0)
#define TC_IMPL_TC_IIOP_Version_0 'i'
#define TC_IMPL_TC_IIOP_Version_1 'o'
#define TC_IMPL_TC_IIOP_Version_2 'p'
#define TC_IMPL_TC_IIOP_Version_3 '_'
#define TC_IMPL_TC_IIOP_Version_4 'd'
#define TC_IMPL_TC_IIOP_Version_5 'e'
#define TC_IMPL_TC_IIOP_Version_6 'f'
#define TC_IMPL_TC_IIOP_Version_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IIOP_Version_struct;
#define TC_IIOP_Version ((CORBA_TypeCode)&TC_IIOP_Version_struct)
#endif
#define IIOP_Version__alloc() ((IIOP_Version *)ORBit_small_alloc (TC_IIOP_Version))
#define IIOP_Version__freekids(m,d) ORBit_small_freekids (TC_IIOP_Version,(m),(d))
#endif
#if !defined(_IIOP_ProfileBody_1_0_defined)
#define _IIOP_ProfileBody_1_0_defined 1
typedef struct IIOP_ProfileBody_1_0_type IIOP_ProfileBody_1_0;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct IIOP_ProfileBody_1_0_type {
IIOP_Version iiop_version;
CORBA_string host;
CORBA_unsigned_short port;
CORBA_sequence_CORBA_octet object_key;
};

#if !defined(TC_IMPL_TC_IIOP_ProfileBody_1_0_0)
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_0 'i'
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_1 'o'
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_2 'p'
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_3 '_'
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_4 'd'
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_5 'e'
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_6 'f'
#define TC_IMPL_TC_IIOP_ProfileBody_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IIOP_ProfileBody_1_0_struct;
#define TC_IIOP_ProfileBody_1_0 ((CORBA_TypeCode)&TC_IIOP_ProfileBody_1_0_struct)
#endif
#define IIOP_ProfileBody_1_0__alloc() ((IIOP_ProfileBody_1_0 *)ORBit_small_alloc (TC_IIOP_ProfileBody_1_0))
#define IIOP_ProfileBody_1_0__freekids(m,d) ORBit_small_freekids (TC_IIOP_ProfileBody_1_0,(m),(d))
#endif
#if !defined(_IIOP_ProfileBody_1_1_defined)
#define _IIOP_ProfileBody_1_1_defined 1
typedef struct IIOP_ProfileBody_1_1_type IIOP_ProfileBody_1_1;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_IOP_TaggedComponent)
#define ORBIT_DECL_CORBA_sequence_IOP_TaggedComponent 1
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_0 'i'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_1 'o'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_2 'p'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_3 '_'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_4 'd'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_5 'e'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_6 'f'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_7 's'
#if !defined(_CORBA_sequence_IOP_TaggedComponent_defined)
#define _CORBA_sequence_IOP_TaggedComponent_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; IOP_TaggedComponent* _buffer; CORBA_boolean _release; } CORBA_sequence_IOP_TaggedComponent;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_0)
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_0 'i'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_1 'o'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_2 'p'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_3 '_'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_4 'd'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_5 'e'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_6 'f'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_IOP_TaggedComponent_struct;
#define TC_CORBA_sequence_IOP_TaggedComponent ((CORBA_TypeCode)&TC_CORBA_sequence_IOP_TaggedComponent_struct)
#endif
#define CORBA_sequence_IOP_TaggedComponent__alloc() ((CORBA_sequence_IOP_TaggedComponent *)ORBit_small_alloc (TC_CORBA_sequence_IOP_TaggedComponent))
#define CORBA_sequence_IOP_TaggedComponent__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IOP_TaggedComponent,(m),(d))
#define CORBA_sequence_IOP_TaggedComponent_allocbuf(l) ((IOP_TaggedComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedComponent, (l)))
#define CORBA_sequence_IOP_TaggedComponent_allocbuf(l) ((IOP_TaggedComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedComponent, (l)))
#endif
struct IIOP_ProfileBody_1_1_type {
IIOP_Version iiop_version;
CORBA_string host;
CORBA_unsigned_short port;
CORBA_sequence_CORBA_octet object_key;
CORBA_sequence_IOP_TaggedComponent components;
};

#if !defined(TC_IMPL_TC_IIOP_ProfileBody_1_1_0)
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_0 'i'
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_1 'o'
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_2 'p'
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_3 '_'
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_4 'd'
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_5 'e'
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_6 'f'
#define TC_IMPL_TC_IIOP_ProfileBody_1_1_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IIOP_ProfileBody_1_1_struct;
#define TC_IIOP_ProfileBody_1_1 ((CORBA_TypeCode)&TC_IIOP_ProfileBody_1_1_struct)
#endif
#define IIOP_ProfileBody_1_1__alloc() ((IIOP_ProfileBody_1_1 *)ORBit_small_alloc (TC_IIOP_ProfileBody_1_1))
#define IIOP_ProfileBody_1_1__freekids(m,d) ORBit_small_freekids (TC_IIOP_ProfileBody_1_1,(m),(d))
#endif
#if !defined(_IIOP_ListenPoint_defined)
#define _IIOP_ListenPoint_defined 1
typedef struct IIOP_ListenPoint_type IIOP_ListenPoint;
struct IIOP_ListenPoint_type {
CORBA_string host;
CORBA_unsigned_short port;
};

#if !defined(TC_IMPL_TC_IIOP_ListenPoint_0)
#define TC_IMPL_TC_IIOP_ListenPoint_0 'i'
#define TC_IMPL_TC_IIOP_ListenPoint_1 'o'
#define TC_IMPL_TC_IIOP_ListenPoint_2 'p'
#define TC_IMPL_TC_IIOP_ListenPoint_3 '_'
#define TC_IMPL_TC_IIOP_ListenPoint_4 'd'
#define TC_IMPL_TC_IIOP_ListenPoint_5 'e'
#define TC_IMPL_TC_IIOP_ListenPoint_6 'f'
#define TC_IMPL_TC_IIOP_ListenPoint_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IIOP_ListenPoint_struct;
#define TC_IIOP_ListenPoint ((CORBA_TypeCode)&TC_IIOP_ListenPoint_struct)
#endif
#define IIOP_ListenPoint__alloc() ((IIOP_ListenPoint *)ORBit_small_alloc (TC_IIOP_ListenPoint))
#define IIOP_ListenPoint__freekids(m,d) ORBit_small_freekids (TC_IIOP_ListenPoint,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_IIOP_ListenPoint)
#define ORBIT_DECL_CORBA_sequence_IIOP_ListenPoint 1
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_0 'i'
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_1 'o'
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_2 'p'
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_3 '_'
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_4 'd'
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_5 'e'
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_6 'f'
#define ORBIT_IMPL_CORBA_sequence_IIOP_ListenPoint_7 's'
#if !defined(_CORBA_sequence_IIOP_ListenPoint_defined)
#define _CORBA_sequence_IIOP_ListenPoint_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; IIOP_ListenPoint* _buffer; CORBA_boolean _release; } CORBA_sequence_IIOP_ListenPoint;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_0)
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_0 'i'
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_1 'o'
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_2 'p'
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_3 '_'
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_4 'd'
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_5 'e'
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_6 'f'
#define TC_IMPL_TC_CORBA_sequence_IIOP_ListenPoint_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_IIOP_ListenPoint_struct;
#define TC_CORBA_sequence_IIOP_ListenPoint ((CORBA_TypeCode)&TC_CORBA_sequence_IIOP_ListenPoint_struct)
#endif
#define CORBA_sequence_IIOP_ListenPoint__alloc() ((CORBA_sequence_IIOP_ListenPoint *)ORBit_small_alloc (TC_CORBA_sequence_IIOP_ListenPoint))
#define CORBA_sequence_IIOP_ListenPoint__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IIOP_ListenPoint,(m),(d))
#define CORBA_sequence_IIOP_ListenPoint_allocbuf(l) ((IIOP_ListenPoint*)ORBit_small_allocbuf (TC_CORBA_sequence_IIOP_ListenPoint, (l)))
#define CORBA_sequence_IIOP_ListenPoint_allocbuf(l) ((IIOP_ListenPoint*)ORBit_small_allocbuf (TC_CORBA_sequence_IIOP_ListenPoint, (l)))
#endif
#if !defined(_IIOP_ListenPointList_defined)
#define _IIOP_ListenPointList_defined 1
typedef CORBA_sequence_IIOP_ListenPoint IIOP_ListenPointList;
#define IIOP_ListenPointList_marshal(x,y,z) CORBA_sequence_IIOP_ListenPoint_marshal((x),(y),(z))
#define IIOP_ListenPointList_demarshal(x,y,z,i) CORBA_sequence_IIOP_ListenPoint_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_IIOP_ListenPointList_0)
#define TC_IMPL_TC_IIOP_ListenPointList_0 'i'
#define TC_IMPL_TC_IIOP_ListenPointList_1 'o'
#define TC_IMPL_TC_IIOP_ListenPointList_2 'p'
#define TC_IMPL_TC_IIOP_ListenPointList_3 '_'
#define TC_IMPL_TC_IIOP_ListenPointList_4 'd'
#define TC_IMPL_TC_IIOP_ListenPointList_5 'e'
#define TC_IMPL_TC_IIOP_ListenPointList_6 'f'
#define TC_IMPL_TC_IIOP_ListenPointList_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IIOP_ListenPointList_struct;
#define TC_IIOP_ListenPointList ((CORBA_TypeCode)&TC_IIOP_ListenPointList_struct)
#endif
#define IIOP_ListenPointList__alloc() ((IIOP_ListenPointList *)ORBit_small_alloc (TC_CORBA_sequence_IIOP_ListenPoint))
#define IIOP_ListenPointList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IIOP_ListenPoint,(m),(d))
#define IIOP_ListenPointList_allocbuf(l) ((IIOP_ListenPoint*)ORBit_small_allocbuf (TC_CORBA_sequence_IIOP_ListenPoint, (l)))
#endif
#if !defined(_IIOP_BiDirIIOPServiceContext_defined)
#define _IIOP_BiDirIIOPServiceContext_defined 1
typedef struct IIOP_BiDirIIOPServiceContext_type IIOP_BiDirIIOPServiceContext;
struct IIOP_BiDirIIOPServiceContext_type {
IIOP_ListenPointList listen_points;
};

#if !defined(TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_0)
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_0 'i'
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_1 'o'
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_2 'p'
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_3 '_'
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_4 'd'
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_5 'e'
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_6 'f'
#define TC_IMPL_TC_IIOP_BiDirIIOPServiceContext_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IIOP_BiDirIIOPServiceContext_struct;
#define TC_IIOP_BiDirIIOPServiceContext ((CORBA_TypeCode)&TC_IIOP_BiDirIIOPServiceContext_struct)
#endif
#define IIOP_BiDirIIOPServiceContext__alloc() ((IIOP_BiDirIIOPServiceContext *)ORBit_small_alloc (TC_IIOP_BiDirIIOPServiceContext))
#define IIOP_BiDirIIOPServiceContext__freekids(m,d) ORBit_small_freekids (TC_IIOP_BiDirIIOPServiceContext,(m),(d))
#endif
#if !defined(_GIOP_Version_defined)
#define _GIOP_Version_defined 1
typedef struct GIOP_Version_type GIOP_Version;
struct GIOP_Version_type {
CORBA_octet major;
CORBA_octet minor;
};

#if !defined(TC_IMPL_TC_GIOP_Version_0)
#define TC_IMPL_TC_GIOP_Version_0 'i'
#define TC_IMPL_TC_GIOP_Version_1 'o'
#define TC_IMPL_TC_GIOP_Version_2 'p'
#define TC_IMPL_TC_GIOP_Version_3 '_'
#define TC_IMPL_TC_GIOP_Version_4 'd'
#define TC_IMPL_TC_GIOP_Version_5 'e'
#define TC_IMPL_TC_GIOP_Version_6 'f'
#define TC_IMPL_TC_GIOP_Version_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_Version_struct;
#define TC_GIOP_Version ((CORBA_TypeCode)&TC_GIOP_Version_struct)
#endif
#define GIOP_Version__alloc() ((GIOP_Version *)ORBit_small_alloc (TC_GIOP_Version))
#define GIOP_Version__freekids(m,d) ORBit_small_freekids (TC_GIOP_Version,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#if !defined(_GIOP_Principal_defined)
#define _GIOP_Principal_defined 1
typedef CORBA_sequence_CORBA_octet GIOP_Principal;
#define GIOP_Principal_marshal(x,y,z) CORBA_sequence_CORBA_octet_marshal((x),(y),(z))
#define GIOP_Principal_demarshal(x,y,z,i) CORBA_sequence_CORBA_octet_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GIOP_Principal_0)
#define TC_IMPL_TC_GIOP_Principal_0 'i'
#define TC_IMPL_TC_GIOP_Principal_1 'o'
#define TC_IMPL_TC_GIOP_Principal_2 'p'
#define TC_IMPL_TC_GIOP_Principal_3 '_'
#define TC_IMPL_TC_GIOP_Principal_4 'd'
#define TC_IMPL_TC_GIOP_Principal_5 'e'
#define TC_IMPL_TC_GIOP_Principal_6 'f'
#define TC_IMPL_TC_GIOP_Principal_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_Principal_struct;
#define TC_GIOP_Principal ((CORBA_TypeCode)&TC_GIOP_Principal_struct)
#endif
#define GIOP_Principal__alloc() ((GIOP_Principal *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define GIOP_Principal__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define GIOP_Principal_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#if !defined(_GIOP_MsgType_1_0_defined)
#define _GIOP_MsgType_1_0_defined 1
typedef enum {
  GIOP_Request,
  GIOP_Reply,
  GIOP_CancelRequest,
  GIOP_LocateRequest,
  GIOP_LocateReply,
  GIOP_CloseConnection,
  GIOP_MessageError
} GIOP_MsgType_1_0;
#if !defined(TC_IMPL_TC_GIOP_MsgType_1_0_0)
#define TC_IMPL_TC_GIOP_MsgType_1_0_0 'i'
#define TC_IMPL_TC_GIOP_MsgType_1_0_1 'o'
#define TC_IMPL_TC_GIOP_MsgType_1_0_2 'p'
#define TC_IMPL_TC_GIOP_MsgType_1_0_3 '_'
#define TC_IMPL_TC_GIOP_MsgType_1_0_4 'd'
#define TC_IMPL_TC_GIOP_MsgType_1_0_5 'e'
#define TC_IMPL_TC_GIOP_MsgType_1_0_6 'f'
#define TC_IMPL_TC_GIOP_MsgType_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_MsgType_1_0_struct;
#define TC_GIOP_MsgType_1_0 ((CORBA_TypeCode)&TC_GIOP_MsgType_1_0_struct)
#endif
#endif
#if !defined(_GIOP_MessageHeader_1_0_defined)
#define _GIOP_MessageHeader_1_0_defined 1
typedef struct GIOP_MessageHeader_1_0_type GIOP_MessageHeader_1_0;
struct GIOP_MessageHeader_1_0_type {
CORBA_char magic[4];
GIOP_Version GIOP_version;
CORBA_boolean byte_order;
CORBA_octet message_type;
CORBA_unsigned_long message_size;
};

#if !defined(TC_IMPL_TC_GIOP_MessageHeader_1_0_0)
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_0 'i'
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_1 'o'
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_2 'p'
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_3 '_'
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_4 'd'
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_5 'e'
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_6 'f'
#define TC_IMPL_TC_GIOP_MessageHeader_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_MessageHeader_1_0_struct;
#define TC_GIOP_MessageHeader_1_0 ((CORBA_TypeCode)&TC_GIOP_MessageHeader_1_0_struct)
#endif
#define GIOP_MessageHeader_1_0__alloc() ((GIOP_MessageHeader_1_0 *)ORBit_small_alloc (TC_GIOP_MessageHeader_1_0))
#define GIOP_MessageHeader_1_0__freekids(m,d) ORBit_small_freekids (TC_GIOP_MessageHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_MessageHeader_1_1_defined)
#define _GIOP_MessageHeader_1_1_defined 1
typedef struct GIOP_MessageHeader_1_1_type GIOP_MessageHeader_1_1;
struct GIOP_MessageHeader_1_1_type {
CORBA_char magic[4];
GIOP_Version GIOP_version;
CORBA_octet flags;
CORBA_octet message_type;
CORBA_unsigned_long message_size;
};

#if !defined(TC_IMPL_TC_GIOP_MessageHeader_1_1_0)
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_0 'i'
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_1 'o'
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_2 'p'
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_3 '_'
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_4 'd'
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_5 'e'
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_6 'f'
#define TC_IMPL_TC_GIOP_MessageHeader_1_1_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_MessageHeader_1_1_struct;
#define TC_GIOP_MessageHeader_1_1 ((CORBA_TypeCode)&TC_GIOP_MessageHeader_1_1_struct)
#endif
#define GIOP_MessageHeader_1_1__alloc() ((GIOP_MessageHeader_1_1 *)ORBit_small_alloc (TC_GIOP_MessageHeader_1_1))
#define GIOP_MessageHeader_1_1__freekids(m,d) ORBit_small_freekids (TC_GIOP_MessageHeader_1_1,(m),(d))
#endif
#if !defined(_GIOP_MessageHeader_1_2_defined)
#define _GIOP_MessageHeader_1_2_defined 1
typedef GIOP_MessageHeader_1_1 GIOP_MessageHeader_1_2;
#define GIOP_MessageHeader_1_2_marshal(x,y,z) GIOP_MessageHeader_1_1_marshal((x),(y),(z))
#define GIOP_MessageHeader_1_2_demarshal(x,y,z,i) GIOP_MessageHeader_1_1_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GIOP_MessageHeader_1_2_0)
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_0 'i'
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_1 'o'
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_2 'p'
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_3 '_'
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_4 'd'
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_5 'e'
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_6 'f'
#define TC_IMPL_TC_GIOP_MessageHeader_1_2_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_MessageHeader_1_2_struct;
#define TC_GIOP_MessageHeader_1_2 ((CORBA_TypeCode)&TC_GIOP_MessageHeader_1_2_struct)
#endif
#define GIOP_MessageHeader_1_2__alloc() ((GIOP_MessageHeader_1_2 *)ORBit_small_alloc (TC_GIOP_MessageHeader_1_1))
#define GIOP_MessageHeader_1_2__freekids(m,d) ORBit_small_freekids (TC_GIOP_MessageHeader_1_1,(m),(d))
#endif
#if !defined(_GIOP_RequestHeader_1_0_defined)
#define _GIOP_RequestHeader_1_0_defined 1
typedef struct GIOP_RequestHeader_1_0_type GIOP_RequestHeader_1_0;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct GIOP_RequestHeader_1_0_type {
IOP_ServiceContextList service_context;
CORBA_unsigned_long request_id;
CORBA_boolean response_expected;
CORBA_sequence_CORBA_octet object_key;
CORBA_string operation;
GIOP_Principal requesting_principal;
};

#if !defined(TC_IMPL_TC_GIOP_RequestHeader_1_0_0)
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_0 'i'
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_1 'o'
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_2 'p'
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_3 '_'
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_4 'd'
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_5 'e'
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_6 'f'
#define TC_IMPL_TC_GIOP_RequestHeader_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_RequestHeader_1_0_struct;
#define TC_GIOP_RequestHeader_1_0 ((CORBA_TypeCode)&TC_GIOP_RequestHeader_1_0_struct)
#endif
#define GIOP_RequestHeader_1_0__alloc() ((GIOP_RequestHeader_1_0 *)ORBit_small_alloc (TC_GIOP_RequestHeader_1_0))
#define GIOP_RequestHeader_1_0__freekids(m,d) ORBit_small_freekids (TC_GIOP_RequestHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_RequestHeader_1_1_defined)
#define _GIOP_RequestHeader_1_1_defined 1
typedef struct GIOP_RequestHeader_1_1_type GIOP_RequestHeader_1_1;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct GIOP_RequestHeader_1_1_type {
IOP_ServiceContextList service_context;
CORBA_unsigned_long request_id;
CORBA_boolean response_expected;
CORBA_octet reserved[3];
CORBA_sequence_CORBA_octet object_key;
CORBA_string operation;
GIOP_Principal requesting_principal;
};

#if !defined(TC_IMPL_TC_GIOP_RequestHeader_1_1_0)
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_0 'i'
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_1 'o'
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_2 'p'
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_3 '_'
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_4 'd'
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_5 'e'
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_6 'f'
#define TC_IMPL_TC_GIOP_RequestHeader_1_1_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_RequestHeader_1_1_struct;
#define TC_GIOP_RequestHeader_1_1 ((CORBA_TypeCode)&TC_GIOP_RequestHeader_1_1_struct)
#endif
#define GIOP_RequestHeader_1_1__alloc() ((GIOP_RequestHeader_1_1 *)ORBit_small_alloc (TC_GIOP_RequestHeader_1_1))
#define GIOP_RequestHeader_1_1__freekids(m,d) ORBit_small_freekids (TC_GIOP_RequestHeader_1_1,(m),(d))
#endif
#if !defined(_GIOP_AddressingDisposition_defined)
#define _GIOP_AddressingDisposition_defined 1
typedef CORBA_short GIOP_AddressingDisposition;
#define GIOP_AddressingDisposition_marshal(x,y,z) CORBA_short_marshal((x),(y),(z))
#define GIOP_AddressingDisposition_demarshal(x,y,z,i) CORBA_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GIOP_AddressingDisposition_0)
#define TC_IMPL_TC_GIOP_AddressingDisposition_0 'i'
#define TC_IMPL_TC_GIOP_AddressingDisposition_1 'o'
#define TC_IMPL_TC_GIOP_AddressingDisposition_2 'p'
#define TC_IMPL_TC_GIOP_AddressingDisposition_3 '_'
#define TC_IMPL_TC_GIOP_AddressingDisposition_4 'd'
#define TC_IMPL_TC_GIOP_AddressingDisposition_5 'e'
#define TC_IMPL_TC_GIOP_AddressingDisposition_6 'f'
#define TC_IMPL_TC_GIOP_AddressingDisposition_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_AddressingDisposition_struct;
#define TC_GIOP_AddressingDisposition ((CORBA_TypeCode)&TC_GIOP_AddressingDisposition_struct)
#endif
#define GIOP_AddressingDisposition__alloc() ((GIOP_AddressingDisposition *)ORBit_small_alloc (TC_CORBA_short))
#define GIOP_AddressingDisposition__freekids(m,d) ORBit_small_freekids (TC_CORBA_short,(m),(d))
#endif
#ifndef GIOP_KeyAddr
#define GIOP_KeyAddr 0
#endif /* !GIOP_KeyAddr */

#ifndef GIOP_ProfileAddr
#define GIOP_ProfileAddr 1
#endif /* !GIOP_ProfileAddr */

#ifndef GIOP_ReferenceAddr
#define GIOP_ReferenceAddr 2
#endif /* !GIOP_ReferenceAddr */

#if !defined(_GIOP_IORAddressingInfo_defined)
#define _GIOP_IORAddressingInfo_defined 1
typedef struct GIOP_IORAddressingInfo_type GIOP_IORAddressingInfo;
struct GIOP_IORAddressingInfo_type {
CORBA_unsigned_long selected_profile_index;
IOP_IOR ior;
};

#if !defined(TC_IMPL_TC_GIOP_IORAddressingInfo_0)
#define TC_IMPL_TC_GIOP_IORAddressingInfo_0 'i'
#define TC_IMPL_TC_GIOP_IORAddressingInfo_1 'o'
#define TC_IMPL_TC_GIOP_IORAddressingInfo_2 'p'
#define TC_IMPL_TC_GIOP_IORAddressingInfo_3 '_'
#define TC_IMPL_TC_GIOP_IORAddressingInfo_4 'd'
#define TC_IMPL_TC_GIOP_IORAddressingInfo_5 'e'
#define TC_IMPL_TC_GIOP_IORAddressingInfo_6 'f'
#define TC_IMPL_TC_GIOP_IORAddressingInfo_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_IORAddressingInfo_struct;
#define TC_GIOP_IORAddressingInfo ((CORBA_TypeCode)&TC_GIOP_IORAddressingInfo_struct)
#endif
#define GIOP_IORAddressingInfo__alloc() ((GIOP_IORAddressingInfo *)ORBit_small_alloc (TC_GIOP_IORAddressingInfo))
#define GIOP_IORAddressingInfo__freekids(m,d) ORBit_small_freekids (TC_GIOP_IORAddressingInfo,(m),(d))
#endif
#if !defined(_GIOP_TargetAddress_defined)
#define _GIOP_TargetAddress_defined 1
typedef struct GIOP_TargetAddress_type GIOP_TargetAddress;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct GIOP_TargetAddress_type {
GIOP_AddressingDisposition _d;
union {
CORBA_sequence_CORBA_octet object_key;
IOP_TaggedProfile profile;
GIOP_IORAddressingInfo ior;
} _u;
};
#if !defined(TC_IMPL_TC_GIOP_TargetAddress_0)
#define TC_IMPL_TC_GIOP_TargetAddress_0 'i'
#define TC_IMPL_TC_GIOP_TargetAddress_1 'o'
#define TC_IMPL_TC_GIOP_TargetAddress_2 'p'
#define TC_IMPL_TC_GIOP_TargetAddress_3 '_'
#define TC_IMPL_TC_GIOP_TargetAddress_4 'd'
#define TC_IMPL_TC_GIOP_TargetAddress_5 'e'
#define TC_IMPL_TC_GIOP_TargetAddress_6 'f'
#define TC_IMPL_TC_GIOP_TargetAddress_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_TargetAddress_struct;
#define TC_GIOP_TargetAddress ((CORBA_TypeCode)&TC_GIOP_TargetAddress_struct)
#endif
#define GIOP_TargetAddress__alloc() ((GIOP_TargetAddress *)ORBit_small_alloc (TC_GIOP_TargetAddress))
#define GIOP_TargetAddress__freekids(m,d) ORBit_small_freekids (TC_GIOP_TargetAddress,(m),(d))
#endif
#if !defined(_GIOP_RequestHeader_1_2_defined)
#define _GIOP_RequestHeader_1_2_defined 1
typedef struct GIOP_RequestHeader_1_2_type GIOP_RequestHeader_1_2;
struct GIOP_RequestHeader_1_2_type {
CORBA_unsigned_long request_id;
CORBA_octet response_flags;
CORBA_octet reserved[3];
GIOP_TargetAddress target;
CORBA_string operation;
IOP_ServiceContextList service_context;
};

#if !defined(TC_IMPL_TC_GIOP_RequestHeader_1_2_0)
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_0 'i'
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_1 'o'
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_2 'p'
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_3 '_'
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_4 'd'
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_5 'e'
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_6 'f'
#define TC_IMPL_TC_GIOP_RequestHeader_1_2_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_RequestHeader_1_2_struct;
#define TC_GIOP_RequestHeader_1_2 ((CORBA_TypeCode)&TC_GIOP_RequestHeader_1_2_struct)
#endif
#define GIOP_RequestHeader_1_2__alloc() ((GIOP_RequestHeader_1_2 *)ORBit_small_alloc (TC_GIOP_RequestHeader_1_2))
#define GIOP_RequestHeader_1_2__freekids(m,d) ORBit_small_freekids (TC_GIOP_RequestHeader_1_2,(m),(d))
#endif
#if !defined(_GIOP_ReplyStatusType_1_0_defined)
#define _GIOP_ReplyStatusType_1_0_defined 1
typedef enum {
  GIOP_NO_EXCEPTION,
  GIOP_USER_EXCEPTION,
  GIOP_SYSTEM_EXCEPTION,
  GIOP_LOCATION_FORWARD
} GIOP_ReplyStatusType_1_0;
#if !defined(TC_IMPL_TC_GIOP_ReplyStatusType_1_0_0)
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_0 'i'
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_1 'o'
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_2 'p'
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_3 '_'
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_4 'd'
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_5 'e'
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_6 'f'
#define TC_IMPL_TC_GIOP_ReplyStatusType_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_ReplyStatusType_1_0_struct;
#define TC_GIOP_ReplyStatusType_1_0 ((CORBA_TypeCode)&TC_GIOP_ReplyStatusType_1_0_struct)
#endif
#endif
#if !defined(_GIOP_ReplyHeader_1_0_defined)
#define _GIOP_ReplyHeader_1_0_defined 1
typedef struct GIOP_ReplyHeader_1_0_type GIOP_ReplyHeader_1_0;
struct GIOP_ReplyHeader_1_0_type {
IOP_ServiceContextList service_context;
CORBA_unsigned_long request_id;
GIOP_ReplyStatusType_1_0 reply_status;
};

#if !defined(TC_IMPL_TC_GIOP_ReplyHeader_1_0_0)
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_0 'i'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_1 'o'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_2 'p'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_3 '_'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_4 'd'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_5 'e'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_6 'f'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_ReplyHeader_1_0_struct;
#define TC_GIOP_ReplyHeader_1_0 ((CORBA_TypeCode)&TC_GIOP_ReplyHeader_1_0_struct)
#endif
#define GIOP_ReplyHeader_1_0__alloc() ((GIOP_ReplyHeader_1_0 *)ORBit_small_alloc (TC_GIOP_ReplyHeader_1_0))
#define GIOP_ReplyHeader_1_0__freekids(m,d) ORBit_small_freekids (TC_GIOP_ReplyHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_ReplyHeader_1_1_defined)
#define _GIOP_ReplyHeader_1_1_defined 1
typedef GIOP_ReplyHeader_1_0 GIOP_ReplyHeader_1_1;
#define GIOP_ReplyHeader_1_1_marshal(x,y,z) GIOP_ReplyHeader_1_0_marshal((x),(y),(z))
#define GIOP_ReplyHeader_1_1_demarshal(x,y,z,i) GIOP_ReplyHeader_1_0_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GIOP_ReplyHeader_1_1_0)
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_0 'i'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_1 'o'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_2 'p'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_3 '_'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_4 'd'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_5 'e'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_6 'f'
#define TC_IMPL_TC_GIOP_ReplyHeader_1_1_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_ReplyHeader_1_1_struct;
#define TC_GIOP_ReplyHeader_1_1 ((CORBA_TypeCode)&TC_GIOP_ReplyHeader_1_1_struct)
#endif
#define GIOP_ReplyHeader_1_1__alloc() ((GIOP_ReplyHeader_1_1 *)ORBit_small_alloc (TC_GIOP_ReplyHeader_1_0))
#define GIOP_ReplyHeader_1_1__freekids(m,d) ORBit_small_freekids (TC_GIOP_ReplyHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_SystemExceptionReplyBody_defined)
#define _GIOP_SystemExceptionReplyBody_defined 1
typedef struct GIOP_SystemExceptionReplyBody_type GIOP_SystemExceptionReplyBody;
struct GIOP_SystemExceptionReplyBody_type {
CORBA_string exception_id;
CORBA_unsigned_long minor_code_value;
CORBA_unsigned_long completion_status;
};

#if !defined(TC_IMPL_TC_GIOP_SystemExceptionReplyBody_0)
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_0 'i'
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_1 'o'
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_2 'p'
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_3 '_'
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_4 'd'
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_5 'e'
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_6 'f'
#define TC_IMPL_TC_GIOP_SystemExceptionReplyBody_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_SystemExceptionReplyBody_struct;
#define TC_GIOP_SystemExceptionReplyBody ((CORBA_TypeCode)&TC_GIOP_SystemExceptionReplyBody_struct)
#endif
#define GIOP_SystemExceptionReplyBody__alloc() ((GIOP_SystemExceptionReplyBody *)ORBit_small_alloc (TC_GIOP_SystemExceptionReplyBody))
#define GIOP_SystemExceptionReplyBody__freekids(m,d) ORBit_small_freekids (TC_GIOP_SystemExceptionReplyBody,(m),(d))
#endif
#if !defined(_GIOP_CancelRequestHeader_defined)
#define _GIOP_CancelRequestHeader_defined 1
typedef struct GIOP_CancelRequestHeader_type GIOP_CancelRequestHeader;
struct GIOP_CancelRequestHeader_type {
CORBA_unsigned_long request_id;
};

#if !defined(TC_IMPL_TC_GIOP_CancelRequestHeader_0)
#define TC_IMPL_TC_GIOP_CancelRequestHeader_0 'i'
#define TC_IMPL_TC_GIOP_CancelRequestHeader_1 'o'
#define TC_IMPL_TC_GIOP_CancelRequestHeader_2 'p'
#define TC_IMPL_TC_GIOP_CancelRequestHeader_3 '_'
#define TC_IMPL_TC_GIOP_CancelRequestHeader_4 'd'
#define TC_IMPL_TC_GIOP_CancelRequestHeader_5 'e'
#define TC_IMPL_TC_GIOP_CancelRequestHeader_6 'f'
#define TC_IMPL_TC_GIOP_CancelRequestHeader_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_CancelRequestHeader_struct;
#define TC_GIOP_CancelRequestHeader ((CORBA_TypeCode)&TC_GIOP_CancelRequestHeader_struct)
#endif
#define GIOP_CancelRequestHeader__alloc() ((GIOP_CancelRequestHeader *)ORBit_small_alloc (TC_GIOP_CancelRequestHeader))
#define GIOP_CancelRequestHeader__freekids(m,d) ORBit_small_freekids (TC_GIOP_CancelRequestHeader,(m),(d))
#endif
#if !defined(_GIOP_LocateRequestHeader_1_0_defined)
#define _GIOP_LocateRequestHeader_1_0_defined 1
typedef struct GIOP_LocateRequestHeader_1_0_type GIOP_LocateRequestHeader_1_0;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct GIOP_LocateRequestHeader_1_0_type {
CORBA_unsigned_long request_id;
CORBA_sequence_CORBA_octet object_key;
};

#if !defined(TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_0)
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_0 'i'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_1 'o'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_2 'p'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_3 '_'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_4 'd'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_5 'e'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_6 'f'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_LocateRequestHeader_1_0_struct;
#define TC_GIOP_LocateRequestHeader_1_0 ((CORBA_TypeCode)&TC_GIOP_LocateRequestHeader_1_0_struct)
#endif
#define GIOP_LocateRequestHeader_1_0__alloc() ((GIOP_LocateRequestHeader_1_0 *)ORBit_small_alloc (TC_GIOP_LocateRequestHeader_1_0))
#define GIOP_LocateRequestHeader_1_0__freekids(m,d) ORBit_small_freekids (TC_GIOP_LocateRequestHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_LocateRequestHeader_1_1_defined)
#define _GIOP_LocateRequestHeader_1_1_defined 1
typedef GIOP_LocateRequestHeader_1_0 GIOP_LocateRequestHeader_1_1;
#define GIOP_LocateRequestHeader_1_1_marshal(x,y,z) GIOP_LocateRequestHeader_1_0_marshal((x),(y),(z))
#define GIOP_LocateRequestHeader_1_1_demarshal(x,y,z,i) GIOP_LocateRequestHeader_1_0_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_0)
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_0 'i'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_1 'o'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_2 'p'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_3 '_'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_4 'd'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_5 'e'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_6 'f'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_1_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_LocateRequestHeader_1_1_struct;
#define TC_GIOP_LocateRequestHeader_1_1 ((CORBA_TypeCode)&TC_GIOP_LocateRequestHeader_1_1_struct)
#endif
#define GIOP_LocateRequestHeader_1_1__alloc() ((GIOP_LocateRequestHeader_1_1 *)ORBit_small_alloc (TC_GIOP_LocateRequestHeader_1_0))
#define GIOP_LocateRequestHeader_1_1__freekids(m,d) ORBit_small_freekids (TC_GIOP_LocateRequestHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_LocateRequestHeader_1_2_defined)
#define _GIOP_LocateRequestHeader_1_2_defined 1
typedef struct GIOP_LocateRequestHeader_1_2_type GIOP_LocateRequestHeader_1_2;
struct GIOP_LocateRequestHeader_1_2_type {
CORBA_unsigned_long request_id;
GIOP_TargetAddress target;
};

#if !defined(TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_0)
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_0 'i'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_1 'o'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_2 'p'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_3 '_'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_4 'd'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_5 'e'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_6 'f'
#define TC_IMPL_TC_GIOP_LocateRequestHeader_1_2_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_LocateRequestHeader_1_2_struct;
#define TC_GIOP_LocateRequestHeader_1_2 ((CORBA_TypeCode)&TC_GIOP_LocateRequestHeader_1_2_struct)
#endif
#define GIOP_LocateRequestHeader_1_2__alloc() ((GIOP_LocateRequestHeader_1_2 *)ORBit_small_alloc (TC_GIOP_LocateRequestHeader_1_2))
#define GIOP_LocateRequestHeader_1_2__freekids(m,d) ORBit_small_freekids (TC_GIOP_LocateRequestHeader_1_2,(m),(d))
#endif
#if !defined(_GIOP_LocateStatusType_1_0_defined)
#define _GIOP_LocateStatusType_1_0_defined 1
typedef enum {
  GIOP_UNKNOWN_OBJECT,
  GIOP_OBJECT_HERE,
  GIOP_OBJECT_FORWARD
} GIOP_LocateStatusType_1_0;
#if !defined(TC_IMPL_TC_GIOP_LocateStatusType_1_0_0)
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_0 'i'
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_1 'o'
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_2 'p'
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_3 '_'
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_4 'd'
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_5 'e'
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_6 'f'
#define TC_IMPL_TC_GIOP_LocateStatusType_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_LocateStatusType_1_0_struct;
#define TC_GIOP_LocateStatusType_1_0 ((CORBA_TypeCode)&TC_GIOP_LocateStatusType_1_0_struct)
#endif
#endif
#if !defined(_GIOP_LocateReplyHeader_1_0_defined)
#define _GIOP_LocateReplyHeader_1_0_defined 1
typedef struct GIOP_LocateReplyHeader_1_0_type GIOP_LocateReplyHeader_1_0;
struct GIOP_LocateReplyHeader_1_0_type {
CORBA_unsigned_long request_id;
GIOP_LocateStatusType_1_0 locate_status;
};

#if !defined(TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_0)
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_0 'i'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_1 'o'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_2 'p'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_3 '_'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_4 'd'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_5 'e'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_6 'f'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_0_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_LocateReplyHeader_1_0_struct;
#define TC_GIOP_LocateReplyHeader_1_0 ((CORBA_TypeCode)&TC_GIOP_LocateReplyHeader_1_0_struct)
#endif
#define GIOP_LocateReplyHeader_1_0__alloc() ((GIOP_LocateReplyHeader_1_0 *)ORBit_small_alloc (TC_GIOP_LocateReplyHeader_1_0))
#define GIOP_LocateReplyHeader_1_0__freekids(m,d) ORBit_small_freekids (TC_GIOP_LocateReplyHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_LocateReplyHeader_1_1_defined)
#define _GIOP_LocateReplyHeader_1_1_defined 1
typedef GIOP_LocateReplyHeader_1_0 GIOP_LocateReplyHeader_1_1;
#define GIOP_LocateReplyHeader_1_1_marshal(x,y,z) GIOP_LocateReplyHeader_1_0_marshal((x),(y),(z))
#define GIOP_LocateReplyHeader_1_1_demarshal(x,y,z,i) GIOP_LocateReplyHeader_1_0_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_0)
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_0 'i'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_1 'o'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_2 'p'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_3 '_'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_4 'd'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_5 'e'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_6 'f'
#define TC_IMPL_TC_GIOP_LocateReplyHeader_1_1_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_LocateReplyHeader_1_1_struct;
#define TC_GIOP_LocateReplyHeader_1_1 ((CORBA_TypeCode)&TC_GIOP_LocateReplyHeader_1_1_struct)
#endif
#define GIOP_LocateReplyHeader_1_1__alloc() ((GIOP_LocateReplyHeader_1_1 *)ORBit_small_alloc (TC_GIOP_LocateReplyHeader_1_0))
#define GIOP_LocateReplyHeader_1_1__freekids(m,d) ORBit_small_freekids (TC_GIOP_LocateReplyHeader_1_0,(m),(d))
#endif
#if !defined(_GIOP_FragmentHeader_1_2_defined)
#define _GIOP_FragmentHeader_1_2_defined 1
typedef struct GIOP_FragmentHeader_1_2_type GIOP_FragmentHeader_1_2;
struct GIOP_FragmentHeader_1_2_type {
CORBA_unsigned_long request_id;
};

#if !defined(TC_IMPL_TC_GIOP_FragmentHeader_1_2_0)
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_0 'i'
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_1 'o'
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_2 'p'
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_3 '_'
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_4 'd'
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_5 'e'
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_6 'f'
#define TC_IMPL_TC_GIOP_FragmentHeader_1_2_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_GIOP_FragmentHeader_1_2_struct;
#define TC_GIOP_FragmentHeader_1_2 ((CORBA_TypeCode)&TC_GIOP_FragmentHeader_1_2_struct)
#endif
#define GIOP_FragmentHeader_1_2__alloc() ((GIOP_FragmentHeader_1_2 *)ORBit_small_alloc (TC_GIOP_FragmentHeader_1_2))
#define GIOP_FragmentHeader_1_2__freekids(m,d) ORBit_small_freekids (TC_GIOP_FragmentHeader_1_2,(m),(d))
#endif
#if !defined(_BiDirPolicy_BidirectionalPolicyValue_defined)
#define _BiDirPolicy_BidirectionalPolicyValue_defined 1
typedef CORBA_unsigned_short BiDirPolicy_BidirectionalPolicyValue;
#define BiDirPolicy_BidirectionalPolicyValue_marshal(x,y,z) CORBA_unsigned_short_marshal((x),(y),(z))
#define BiDirPolicy_BidirectionalPolicyValue_demarshal(x,y,z,i) CORBA_unsigned_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_0)
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_0 'i'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_1 'o'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_2 'p'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_3 '_'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_4 'd'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_5 'e'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_6 'f'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicyValue_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_BiDirPolicy_BidirectionalPolicyValue_struct;
#define TC_BiDirPolicy_BidirectionalPolicyValue ((CORBA_TypeCode)&TC_BiDirPolicy_BidirectionalPolicyValue_struct)
#endif
#define BiDirPolicy_BidirectionalPolicyValue__alloc() ((BiDirPolicy_BidirectionalPolicyValue *)ORBit_small_alloc (TC_CORBA_unsigned_short))
#define BiDirPolicy_BidirectionalPolicyValue__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_short,(m),(d))
#endif
#ifndef BiDirPolicy_NORMAL
#define BiDirPolicy_NORMAL 0U
#endif /* !BiDirPolicy_NORMAL */

#ifndef BiDirPolicy_BOTH
#define BiDirPolicy_BOTH 1U
#endif /* !BiDirPolicy_BOTH */

#ifndef BiDirPolicy_BIDIRECTIONAL_POLICY_TYPE
#define BiDirPolicy_BIDIRECTIONAL_POLICY_TYPE 37U
#endif /* !BiDirPolicy_BIDIRECTIONAL_POLICY_TYPE */

#if !defined(ORBIT_DECL_BiDirPolicy_BidirectionalPolicy) && !defined(_BiDirPolicy_BidirectionalPolicy_defined)
#define ORBIT_DECL_BiDirPolicy_BidirectionalPolicy 1
#define _BiDirPolicy_BidirectionalPolicy_defined 1
#define BiDirPolicy_BidirectionalPolicy__freekids CORBA_Object__freekids
typedef CORBA_Object BiDirPolicy_BidirectionalPolicy;
extern CORBA_unsigned_long BiDirPolicy_BidirectionalPolicy__classid;
#if !defined(TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_0)
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_0 'i'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_1 'o'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_2 'p'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_3 '_'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_4 'd'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_5 'e'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_6 'f'
#define TC_IMPL_TC_BiDirPolicy_BidirectionalPolicy_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_BiDirPolicy_BidirectionalPolicy_struct;
#define TC_BiDirPolicy_BidirectionalPolicy ((CORBA_TypeCode)&TC_BiDirPolicy_BidirectionalPolicy_struct)
#endif
#endif
#if !defined(_CONV_FRAME_CodeSetId_defined)
#define _CONV_FRAME_CodeSetId_defined 1
typedef CORBA_unsigned_long CONV_FRAME_CodeSetId;
#define CONV_FRAME_CodeSetId_marshal(x,y,z) CORBA_unsigned_long_marshal((x),(y),(z))
#define CONV_FRAME_CodeSetId_demarshal(x,y,z,i) CORBA_unsigned_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_CONV_FRAME_CodeSetId_0)
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_0 'i'
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_1 'o'
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_2 'p'
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_3 '_'
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_4 'd'
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_5 'e'
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_6 'f'
#define TC_IMPL_TC_CONV_FRAME_CodeSetId_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CONV_FRAME_CodeSetId_struct;
#define TC_CONV_FRAME_CodeSetId ((CORBA_TypeCode)&TC_CONV_FRAME_CodeSetId_struct)
#endif
#define CONV_FRAME_CodeSetId__alloc() ((CONV_FRAME_CodeSetId *)ORBit_small_alloc (TC_CORBA_unsigned_long))
#define CONV_FRAME_CodeSetId__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long,(m),(d))
#endif
#if !defined(_CONV_FRAME_CodeSetComponent_defined)
#define _CONV_FRAME_CodeSetComponent_defined 1
typedef struct CONV_FRAME_CodeSetComponent_type CONV_FRAME_CodeSetComponent;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_unsigned_long)
#define ORBIT_DECL_CORBA_sequence_CORBA_unsigned_long 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_7 's'
#if !defined(_CORBA_sequence_CORBA_unsigned_long_defined)
#define _CORBA_sequence_CORBA_unsigned_long_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_unsigned_long* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_unsigned_long;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_unsigned_long_struct;
#define TC_CORBA_sequence_CORBA_unsigned_long ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_unsigned_long_struct)
#endif
#define CORBA_sequence_CORBA_unsigned_long__alloc() ((CORBA_sequence_CORBA_unsigned_long *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_unsigned_long))
#define CORBA_sequence_CORBA_unsigned_long__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_unsigned_long,(m),(d))
#define CORBA_sequence_CORBA_unsigned_long_allocbuf(l) ((CORBA_unsigned_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_long, (l)))
#define CORBA_sequence_CORBA_unsigned_long_allocbuf(l) ((CORBA_unsigned_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_long, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CONV_FRAME_CodeSetId)
#define ORBIT_DECL_CORBA_sequence_CONV_FRAME_CodeSetId 1
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CONV_FRAME_CodeSetId_7 's'
#if !defined(_CORBA_sequence_CONV_FRAME_CodeSetId_defined)
#define _CORBA_sequence_CONV_FRAME_CodeSetId_defined 1
typedef CORBA_sequence_CORBA_unsigned_long CORBA_sequence_CONV_FRAME_CodeSetId;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_0)
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CONV_FRAME_CodeSetId_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CONV_FRAME_CodeSetId_struct;
#define TC_CORBA_sequence_CONV_FRAME_CodeSetId ((CORBA_TypeCode)&TC_CORBA_sequence_CONV_FRAME_CodeSetId_struct)
#endif
#define CORBA_sequence_CONV_FRAME_CodeSetId__alloc CORBA_sequence_CORBA_unsigned_long__alloc
#define CORBA_sequence_CONV_FRAME_CodeSetId__freekids CORBA_sequence_CORBA_unsigned_long__freekids
#define CORBA_sequence_CONV_FRAME_CodeSetId_allocbuf CORBA_sequence_CORBA_unsigned_long_allocbuf
#define CORBA_sequence_CONV_FRAME_CodeSetId_marshal(x,y,z) CORBA_sequence_CORBA_unsigned_long_marshal((x),(y),(z))
#define CORBA_sequence_CONV_FRAME_CodeSetId_demarshal(x,y,z,i) CORBA_sequence_CORBA_unsigned_long_demarshal((x),(y),(z),(i))
#endif
struct CONV_FRAME_CodeSetComponent_type {
CONV_FRAME_CodeSetId native_code_set;
CORBA_sequence_CONV_FRAME_CodeSetId conversion_code_sets;
};

#if !defined(TC_IMPL_TC_CONV_FRAME_CodeSetComponent_0)
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_0 'i'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_1 'o'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_2 'p'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_3 '_'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_4 'd'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_5 'e'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_6 'f'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CONV_FRAME_CodeSetComponent_struct;
#define TC_CONV_FRAME_CodeSetComponent ((CORBA_TypeCode)&TC_CONV_FRAME_CodeSetComponent_struct)
#endif
#define CONV_FRAME_CodeSetComponent__alloc() ((CONV_FRAME_CodeSetComponent *)ORBit_small_alloc (TC_CONV_FRAME_CodeSetComponent))
#define CONV_FRAME_CodeSetComponent__freekids(m,d) ORBit_small_freekids (TC_CONV_FRAME_CodeSetComponent,(m),(d))
#endif
#if !defined(_CONV_FRAME_CodeSetComponentInfo_defined)
#define _CONV_FRAME_CodeSetComponentInfo_defined 1
typedef struct CONV_FRAME_CodeSetComponentInfo_type CONV_FRAME_CodeSetComponentInfo;
struct CONV_FRAME_CodeSetComponentInfo_type {
CONV_FRAME_CodeSetComponent ForCharData;
CONV_FRAME_CodeSetComponent ForWcharData;
};

#if !defined(TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_0)
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_0 'i'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_1 'o'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_2 'p'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_3 '_'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_4 'd'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_5 'e'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_6 'f'
#define TC_IMPL_TC_CONV_FRAME_CodeSetComponentInfo_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CONV_FRAME_CodeSetComponentInfo_struct;
#define TC_CONV_FRAME_CodeSetComponentInfo ((CORBA_TypeCode)&TC_CONV_FRAME_CodeSetComponentInfo_struct)
#endif
#define CONV_FRAME_CodeSetComponentInfo__alloc() ((CONV_FRAME_CodeSetComponentInfo *)ORBit_small_alloc (TC_CONV_FRAME_CodeSetComponentInfo))
#define CONV_FRAME_CodeSetComponentInfo__freekids(m,d) ORBit_small_freekids (TC_CONV_FRAME_CodeSetComponentInfo,(m),(d))
#endif
#if !defined(_CONV_FRAME_CodeSetContext_defined)
#define _CONV_FRAME_CodeSetContext_defined 1
typedef struct CONV_FRAME_CodeSetContext_type CONV_FRAME_CodeSetContext;
struct CONV_FRAME_CodeSetContext_type {
CONV_FRAME_CodeSetId char_data;
CONV_FRAME_CodeSetId wchar_data;
};

#if !defined(TC_IMPL_TC_CONV_FRAME_CodeSetContext_0)
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_0 'i'
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_1 'o'
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_2 'p'
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_3 '_'
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_4 'd'
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_5 'e'
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_6 'f'
#define TC_IMPL_TC_CONV_FRAME_CodeSetContext_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CONV_FRAME_CodeSetContext_struct;
#define TC_CONV_FRAME_CodeSetContext ((CORBA_TypeCode)&TC_CONV_FRAME_CodeSetContext_struct)
#endif
#define CONV_FRAME_CodeSetContext__alloc() ((CONV_FRAME_CodeSetContext *)ORBit_small_alloc (TC_CONV_FRAME_CodeSetContext))
#define CONV_FRAME_CodeSetContext__freekids(m,d) ORBit_small_freekids (TC_CONV_FRAME_CodeSetContext,(m),(d))
#endif
#ifndef IOP_TAG_ORBIT_SPECIFIC
#define IOP_TAG_ORBIT_SPECIFIC 3135221450U
#endif /* !IOP_TAG_ORBIT_SPECIFIC */

#ifndef IOP_TAG_GENERIC_IOP
#define IOP_TAG_GENERIC_IOP 1329746944U
#endif /* !IOP_TAG_GENERIC_IOP */

#ifndef IOP_TAG_GENERIC_SSL_SEC_TRANS
#define IOP_TAG_GENERIC_SSL_SEC_TRANS 1329746944U
#endif /* !IOP_TAG_GENERIC_SSL_SEC_TRANS */

#if !defined(_IOP_ORBitSpecificProfileBody_defined)
#define _IOP_ORBitSpecificProfileBody_defined 1
typedef struct IOP_ORBitSpecificProfileBody_type IOP_ORBitSpecificProfileBody;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'p'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 '_'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'e'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_6 'f'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_7 's'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'p'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 '_'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'e'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_6 'f'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
struct IOP_ORBitSpecificProfileBody_type {
CORBA_string unix_sock_path;
CORBA_unsigned_short ipv6_port;
CORBA_sequence_CORBA_octet object_key;
};

#if !defined(TC_IMPL_TC_IOP_ORBitSpecificProfileBody_0)
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_0 'i'
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_1 'o'
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_2 'p'
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_3 '_'
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_4 'd'
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_5 'e'
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_6 'f'
#define TC_IMPL_TC_IOP_ORBitSpecificProfileBody_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_ORBitSpecificProfileBody_struct;
#define TC_IOP_ORBitSpecificProfileBody ((CORBA_TypeCode)&TC_IOP_ORBitSpecificProfileBody_struct)
#endif
#define IOP_ORBitSpecificProfileBody__alloc() ((IOP_ORBitSpecificProfileBody *)ORBit_small_alloc (TC_IOP_ORBitSpecificProfileBody))
#define IOP_ORBitSpecificProfileBody__freekids(m,d) ORBit_small_freekids (TC_IOP_ORBitSpecificProfileBody,(m),(d))
#endif
#if !defined(_IOP_GenericIOPProfileBody_defined)
#define _IOP_GenericIOPProfileBody_defined 1
typedef struct IOP_GenericIOPProfileBody_type IOP_GenericIOPProfileBody;
#if !defined(ORBIT_DECL_CORBA_sequence_IOP_TaggedComponent)
#define ORBIT_DECL_CORBA_sequence_IOP_TaggedComponent 1
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_0 'i'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_1 'o'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_2 'p'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_3 '_'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_4 'd'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_5 'e'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_6 'f'
#define ORBIT_IMPL_CORBA_sequence_IOP_TaggedComponent_7 's'
#if !defined(_CORBA_sequence_IOP_TaggedComponent_defined)
#define _CORBA_sequence_IOP_TaggedComponent_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; IOP_TaggedComponent* _buffer; CORBA_boolean _release; } CORBA_sequence_IOP_TaggedComponent;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_0)
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_0 'i'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_1 'o'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_2 'p'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_3 '_'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_4 'd'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_5 'e'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_6 'f'
#define TC_IMPL_TC_CORBA_sequence_IOP_TaggedComponent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_CORBA_sequence_IOP_TaggedComponent_struct;
#define TC_CORBA_sequence_IOP_TaggedComponent ((CORBA_TypeCode)&TC_CORBA_sequence_IOP_TaggedComponent_struct)
#endif
#define CORBA_sequence_IOP_TaggedComponent__alloc() ((CORBA_sequence_IOP_TaggedComponent *)ORBit_small_alloc (TC_CORBA_sequence_IOP_TaggedComponent))
#define CORBA_sequence_IOP_TaggedComponent__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_IOP_TaggedComponent,(m),(d))
#define CORBA_sequence_IOP_TaggedComponent_allocbuf(l) ((IOP_TaggedComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedComponent, (l)))
#define CORBA_sequence_IOP_TaggedComponent_allocbuf(l) ((IOP_TaggedComponent*)ORBit_small_allocbuf (TC_CORBA_sequence_IOP_TaggedComponent, (l)))
#endif
struct IOP_GenericIOPProfileBody_type {
IIOP_Version iiop_version;
CORBA_string protocol;
CORBA_string host;
CORBA_string service;
CORBA_sequence_IOP_TaggedComponent components;
};

#if !defined(TC_IMPL_TC_IOP_GenericIOPProfileBody_0)
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_0 'i'
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_1 'o'
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_2 'p'
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_3 '_'
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_4 'd'
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_5 'e'
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_6 'f'
#define TC_IMPL_TC_IOP_GenericIOPProfileBody_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_GenericIOPProfileBody_struct;
#define TC_IOP_GenericIOPProfileBody ((CORBA_TypeCode)&TC_IOP_GenericIOPProfileBody_struct)
#endif
#define IOP_GenericIOPProfileBody__alloc() ((IOP_GenericIOPProfileBody *)ORBit_small_alloc (TC_IOP_GenericIOPProfileBody))
#define IOP_GenericIOPProfileBody__freekids(m,d) ORBit_small_freekids (TC_IOP_GenericIOPProfileBody,(m),(d))
#endif
#if !defined(_IOP_SSLGenericComponent_defined)
#define _IOP_SSLGenericComponent_defined 1
typedef struct IOP_SSLGenericComponent_type IOP_SSLGenericComponent;
struct IOP_SSLGenericComponent_type {
CORBA_string service;
};

#if !defined(TC_IMPL_TC_IOP_SSLGenericComponent_0)
#define TC_IMPL_TC_IOP_SSLGenericComponent_0 'i'
#define TC_IMPL_TC_IOP_SSLGenericComponent_1 'o'
#define TC_IMPL_TC_IOP_SSLGenericComponent_2 'p'
#define TC_IMPL_TC_IOP_SSLGenericComponent_3 '_'
#define TC_IMPL_TC_IOP_SSLGenericComponent_4 'd'
#define TC_IMPL_TC_IOP_SSLGenericComponent_5 'e'
#define TC_IMPL_TC_IOP_SSLGenericComponent_6 'f'
#define TC_IMPL_TC_IOP_SSLGenericComponent_7 's'
#ifdef ORBIT_IDL_C_IMODULE_iop_defs
static
#else
extern
#endif
const struct CORBA_TypeCode_struct TC_IOP_SSLGenericComponent_struct;
#define TC_IOP_SSLGenericComponent ((CORBA_TypeCode)&TC_IOP_SSLGenericComponent_struct)
#endif
#define IOP_SSLGenericComponent__alloc() ((IOP_SSLGenericComponent *)ORBit_small_alloc (TC_IOP_SSLGenericComponent))
#define IOP_SSLGenericComponent__freekids(m,d) ORBit_small_freekids (TC_IOP_SSLGenericComponent,(m),(d))
#endif

/** stub prototypes **/
#define BiDirPolicy_BidirectionalPolicy__get_policy_type CORBA_Policy__get_policy_type
#define BiDirPolicy_BidirectionalPolicy_copy CORBA_Policy_copy
#define BiDirPolicy_BidirectionalPolicy_destroy CORBA_Policy_destroy
BiDirPolicy_BidirectionalPolicyValue BiDirPolicy_BidirectionalPolicy__get_value(BiDirPolicy_BidirectionalPolicy _obj, CORBA_Environment *ev);
#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
